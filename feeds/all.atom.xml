<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dan Friedman's Data Science Knowledge Base</title><link href="https://dfrieds.com/" rel="alternate"></link><link href="https://dfrieds.com/feeds/all.atom.xml" rel="self"></link><id>https://dfrieds.com/</id><updated>2019-10-04T09:50:00-07:00</updated><entry><title>A Recipe for Doing Great Data Science Work</title><link href="https://dfrieds.com/articles/recipe-great-data-science-work" rel="alternate"></link><published>2019-10-04T09:50:00-07:00</published><updated>2019-10-04T09:50:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-10-04:/articles/recipe-great-data-science-work</id><summary type="html">&lt;p&gt;Stop doing work that doesn't matter! Identify a problem, its significance, brainstorm solutions, implement solution, measure outcomes and share your work.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In doing “data science” work, massive amounts of time and energy can be  wasted on analysis that isn’t impactful for the company. This work may not be aligned with the company’s goals of increased revenue, decreased costs and/or increased customer satisfaction. &lt;/p&gt;
&lt;p&gt;You probably had this happen to you: someone asked you for a metric, you got the “answer”, and this repeats to almost no end. Your work wasn’t impactful because little to no decisions were made from your results. Some teams call these ad-hoc requests.  &lt;/p&gt;
&lt;p&gt;This post debunks how you should approach solving problems with data - a practice that I believe &lt;em&gt;every&lt;/em&gt; organization should follow. &lt;/p&gt;
&lt;p&gt;Whether you’re a Data Scientist, Data Analyst, Product Manager or in &lt;em&gt;any&lt;/em&gt; role that deals with data, this should be relevant to you!&lt;/p&gt;
&lt;p&gt;Before I dive into the recipe for doing great data science work, here are important principles to abide by in doing great work. &lt;/p&gt;
&lt;p&gt;Principles for doing great data work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incorporate relevant stakeholders’ opinions, get their buy-in and provide consistent updates to them. Ideally this will help ensure your work can be impactful to the business&lt;/li&gt;
&lt;li&gt;Document context, process, output, lessons learned and recommended next steps&lt;/li&gt;
&lt;li&gt;Make you work easily accessible for teammates&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Outline: recipe for the “data science” process:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Identify a problem and its significance&lt;/li&gt;
&lt;li&gt;Brainstorm hypotheses to fix problem&lt;/li&gt;
&lt;li&gt;Pick one solution to implement&lt;/li&gt;
&lt;li&gt;Identify measurement plan to measure effect of solution implemented&lt;/li&gt;
&lt;li&gt;Implement solution and collect relevant data to measure change&lt;/li&gt;
&lt;li&gt;Analyze the data and summarize insights as lessons learned&lt;/li&gt;
&lt;li&gt;Optional: repeat steps 2-7 until you’re satisfied with a solution to the problem&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Explanation of each step&lt;/h3&gt;
&lt;h4&gt;1. Identify a problem and its significance&lt;/h4&gt;
&lt;p&gt;Identify the problem. Why is it a problem? How significant of a problem is it? A clear problem statement should answer these two questions in one sentence.  &lt;/p&gt;
&lt;p&gt;An example problem statement: on a 2-page signup flow for a software as a  service  (SaaS) app, users submit basic contact information on the first page, but then 80% of people drop off on the 2nd page, resulting in 800 lost signups per month - equivalent to $8,000 in monthly recurring revenue. &lt;/p&gt;
&lt;p&gt;In this example, evidence of the problem was indicated through quantitative data. Alternatively, detailed qualitative user stories can indicate evidence of the problem. In collecting evidence, it’s important to show empathy for your users. Their pain point may not be one you have yourself using the product.&lt;/p&gt;
&lt;p&gt;In finding evidence of problems in quantitative data, make sure you know the root source of the data, transformations applied to it and the trustworthiness of it. As a Data Scientist, you will have to collect data from a database, customers or another source, then clean it, analyze it and summarize insights that can be easily understandable to others.&lt;/p&gt;
&lt;p&gt;Most companies are reactive. They wait for feedback and let problems linger for long periods of time before fixing them. This is a mistake. Users will churn from your product and quickly spread negative word of mouth. Be proactive in getting user feedback and consistently examine important user data (ex - the signup funnel data in the example above). The more proactive you are, the quicker you’ll identify painful customer problems and fix them before they take a toll on your business.&lt;/p&gt;
&lt;h4&gt;2. Brainstorm hypotheses to fix the problem&lt;/h4&gt;
&lt;p&gt;This is the step most people think of as “data science”. However, not all solutions need to be a fancy statistical technique in the realm of data science. Rather, understand the skills and responsibilities of your teammates and how they can help implement a solution - be it with digital marketing, sales, engineering, design, etc.&lt;/p&gt;
&lt;h4&gt;3. Pick one solution to implement&lt;/h4&gt;
&lt;p&gt;Every company has lots of problems. Generally, you want to identify the most significant problem that can be reasonably fixed in a short period of time. They’re the best “bang for the buck." In some companies like ones very focused on AI, they may want to solve the most challenging problems first. These could take months or years to solve but would give them a competitive advantage.&lt;/p&gt;
&lt;p&gt;In the example above of drop offs in the signup flow, a simple solution may be to add a few lines of copy. You could implement this as a treatment for an AB test to try to prove the copy causes a decrease in drop offs from the first page to the second.&lt;/p&gt;
&lt;h4&gt;4. Create a measurement plan &amp;amp; goal(s) to measure the effect of the solution implemented&lt;/h4&gt;
&lt;p&gt;Create a plan to collect and measure data that helps you understand the effect of the solution being implemented.&lt;/p&gt;
&lt;p&gt;In the signup funnel example, some relevant data to collect may be a cookie for each visitor along with their browser, platform, a flag for their treatment group and a timestamp of each completed action. &lt;/p&gt;
&lt;p&gt;The goal of the new copy could be to decrease signup drop offs from 80% to 75%. &lt;/p&gt;
&lt;p&gt;You should setup invariant metrics too. These are metrics that should stay the same or improve despite the change in the key goal metric. One ideal invariant metric is revenue. For example, the new copy on the second signup page could say “30-day money-back guarantee”. You may get a decrease in signup drop offs from page one to page two, but after thirty days, you may find a larger percentage of customers demand and are granted a refund. Therefore, since the invariant metric of long-term revenue declined, you should remove the 30-day money-back guarantee. &lt;/p&gt;
&lt;p&gt;Learn more about invariant metrics from this great Harvard Business Review (HBR) article.&lt;/p&gt;
&lt;h4&gt;5. Implement solution and collect relevant data to measure change&lt;/h4&gt;
&lt;p&gt;Collaborate with your team members to rock this!&lt;/p&gt;
&lt;h4&gt;6. Analyze the data and summarize insights as lessons learned&lt;/h4&gt;
&lt;p&gt;Present clear insights on the data collected and whether your hypothesis to fix the problem was effective. Document steps 2-6 in detail. It’s great content to provide as evidence to the team on how product development is done, the direction of the business and lessons learned.&lt;/p&gt;
&lt;p&gt;Ideally present insights in a dynamic environment such as a dashboard or a repeatable script. Translating your insights into a static document (i.e. powerpoint) makes it immediately out of date with the current data. &lt;/p&gt;
&lt;p&gt;If your hypothesis was ineffective, proceed to step 7. &lt;/p&gt;
&lt;h4&gt;7. Optional: repeat steps 2-6 until you’re satisfied with a solution to the problem&lt;/h4&gt;
&lt;p&gt;Repetition of this process may yield a better solution to solve the problem!&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt; to Ben Stern and Christine Song for their feedback on drafts of this post.&lt;/p&gt;</content><category term="data science"></category></entry><entry><title>Create Year-Month Column from Dates</title><link href="https://dfrieds.com/data-analysis/create-year-month-column" rel="alternate"></link><published>2019-10-04T03:28:00-07:00</published><updated>2019-10-04T03:28:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-10-04:/data-analysis/create-year-month-column</id><summary type="html">&lt;p&gt;Create a new Pandas dataframe column of year-month combinations given datetime values&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Why Create a Year-Month Numerical Column&lt;/h3&gt;
&lt;p&gt;Often times, you'll be asked to create an aggregate metric per month. Can you calculate sales per month? You'll have to create a new column for a year-month combination and then sum sales for each year-month combination. &lt;/p&gt;
&lt;p&gt;I recommend calculating year-month in the format of year as a numerical number first and then month as a numerical number. For example, activity in August 2012 should shorten in Python to "2012-8". Why? &lt;/p&gt;
&lt;p&gt;This format is appropriate for ordering dates from oldest to newest or newest to oldest. If you format months with an abbreviated name such as "August 2012" and "May 2012", ordering in Python will think "August" comes before "May" which is &lt;em&gt;incorrect&lt;/em&gt; by the calendar. See code below that executes to &lt;code&gt;True&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;August 2012&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;May 2012&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;True
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also, year must come before month because proper ordering of dates should start with year, then month, day, hour, minute, second, etc. &lt;/p&gt;
&lt;p&gt;If we reformat the code above to numbers, the code evaluates to &lt;code&gt;False&lt;/code&gt; which is &lt;em&gt;correct&lt;/em&gt; because August 2012 does &lt;em&gt;not&lt;/em&gt; occur before May 2012.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2012-8&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-5&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;False
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example: Calculate User Signups Per Month&lt;/h3&gt;
&lt;h4&gt;Create dates&lt;/h4&gt;
&lt;p&gt;Let's assume we work for a software as a service (SaaS) business that receives signups for our app. We will create random datetime values in increasing order to represent data for the times people signed up and assign those values to the list &lt;code&gt;signup_datetimes&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;signup_datetime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;signup_datetimes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;total_signups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;signup&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total_signups&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;random_days&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;random_minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;signup_datetime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;signup_datetime&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;random_days&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;random_minutes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;signup_datetimes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signup_datetime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a DataFrame assigned to &lt;code&gt;df&lt;/code&gt; with columns for time users signed up and a unique user id value for each signup.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_created_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;signup_datetimes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total_signups&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;user_created_at&lt;/th&gt;
      &lt;th&gt;user_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-10-07 15:11:40.354691&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-10-18 15:40:40.354691&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-10-24 15:56:40.354691&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-10-28 16:28:40.354691&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-11-08 17:00:40.354691&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Create year-month column from date&lt;/h4&gt;
&lt;p&gt;Python has a method called &lt;code&gt;strftime()&lt;/code&gt; that stands for string format time and can be applied to datetime objects. The method takes as an argument a format for re-formatting a datetime. Popular directives - parts to extract a year, month, etc. are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Directive&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%Y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Year with century as a decimal number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Month as a decimal number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Day of the month as a decimal number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Hour (12-hour clock) as a decimal number [01, 12]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;%M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Minute as a decimal number&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Below, I apply the Pandas series &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.strftime.html" target="_blank"&gt;&lt;code&gt;strftime()&lt;/code&gt; method&lt;/a&gt; to the &lt;code&gt;user_created_at&lt;/code&gt; datetime column to convert values to the string format of &lt;code&gt;%Y-%m&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_created_at_year_month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_created_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y-%m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See all possible pandas string formatting of datetime directives on this &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Period.strftime.html" target="_blank"&gt; official documentation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Preview &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;user_created_at&lt;/th&gt;
      &lt;th&gt;user_id&lt;/th&gt;
      &lt;th&gt;user_created_at_year_month&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-10-07 15:11:40.354691&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2019-10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-10-18 15:40:40.354691&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2019-10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-10-24 15:56:40.354691&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2019-10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-10-28 16:28:40.354691&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2019-10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-11-08 17:00:40.354691&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2019-11&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Calculate user signups per month&lt;/h4&gt;
&lt;p&gt;I can group by the &lt;code&gt;user_created_at_year_month&lt;/code&gt; and count the occurences of unique values using the &lt;a href="https://pandas-docs.github.io/pandas-docs-travis/reference/api/pandas.core.groupby.DataFrameGroupBy.size.html" target="_blank"&gt;method below&lt;/a&gt; in Pandas. &lt;/p&gt;
&lt;p&gt;Then, I cast the resultant Pandas series object to a DataFrame using the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.reset_index.html" target="_blank"&gt;&lt;code&gt;reset_index()&lt;/code&gt; method&lt;/a&gt; and then apply the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rename.html" target="_blank"&gt;&lt;code&gt;rename()&lt;/code&gt; method&lt;/a&gt; to rename the new created column to &lt;code&gt;count_signups&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_created_at_year_month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;count_signups&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;user_created_at_year_month&lt;/th&gt;
      &lt;th&gt;count_signups&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-10&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-11&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-12&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2020-01&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2020-02&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2020-03&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2020-04&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2020-05&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;2020-06&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;2020-07&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;2020-08&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;2020-09&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;2020-10&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;2020-11&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;2020-12&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Since the dates in &lt;code&gt;df&lt;/code&gt; were in order from latest to earliest, we see this same pattern as a result of the group by operation. However, if the original dates were out of order, we could simply order a DataFrame's datetime values with the Pandas &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_values.html" target="_blank"&gt;&lt;code&gt;sort_values()&lt;/code&gt; method&lt;/a&gt;&lt;/p&gt;</content><category term="datetime"></category><category term="python"></category><category term="pandas"></category><category term="year-month"></category></entry><entry><title>Popular Summary Business Metrics</title><link href="https://dfrieds.com/data-analysis/popular-summary-business-metrics" rel="alternate"></link><published>2019-08-26T06:55:00-07:00</published><updated>2019-08-26T06:55:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-08-26:/data-analysis/popular-summary-business-metrics</id><summary type="html">&lt;p&gt;Understand calculations for popular summary business metrics such as a sum, count, percentile, ratio and probability&lt;/p&gt;</summary><content type="html">&lt;p&gt;On the job, I'm often asked to setup a measurement plan for a new app feature or quantify something that's happend in the past. There's several common calculations for metrics including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sum: result of adding numbers&lt;/li&gt;
&lt;li&gt;Count: total number of occurences of something&lt;/li&gt;
&lt;li&gt;Average: a number to regard the central tendancy of a set of values calculated as the sum of a condition divided by the count of occurences of that condition&lt;/li&gt;
&lt;li&gt;Percentile: a value that represents a threshold for the percentage of data points less than the value&lt;/li&gt;
&lt;li&gt;Ratio: comparison of two numbers into a value&lt;/li&gt;
&lt;li&gt;Probability: how likely something is to happen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, I'll walk through a scenario in which I am asked to calculate the &lt;em&gt;success&lt;/em&gt; of a website homepage that's for a note-taking app. &lt;em&gt;Success&lt;/em&gt; is a vague word and there's lots of ways we can characterize it. With each metric using a calculation from the list above, I'll align that metric to be relevant to overall business goal: get as many weekly active users as possible.&lt;/p&gt;
&lt;p&gt;The homepage is just meant to educate people about the note-taking app and encourage them to sign up. There's a lot of content on the homepage about the features of the app and there's a single signup button to create an account and use the note-taking app. &lt;/p&gt;
&lt;p&gt;A caveat: this is a very simple business example and this post is meant to introduce popular summary business metrics. For a real-world project, I'd encourage you to understand your business problems, business goals and the pros and cons of each potential metric you choose. Here's a &lt;a href="https://firstround.com/review/im-sorry-but-those-are-vanity-metrics/" target="_blank"&gt;great article&lt;/a&gt; from First Round Capital that goes into more detail on evaluation of types of metrics on whether they're a practical indicator of your business' success.&lt;/p&gt;
&lt;h3&gt;Setup Code and Data&lt;/h3&gt;
&lt;h4&gt;Import Modules&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Generate Data&lt;/h4&gt;
&lt;p&gt;I'll generate relevant session data we can use to compute all metrics above.&lt;/p&gt;
&lt;p&gt;Below I create 17 sessions in which each session is simplified to a visitor landing on the homepage only and then either clicking the signup button or leaving the site.&lt;/p&gt;
&lt;p&gt;For each session, there's a:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cookie id to represent a unique value for a visitor based on the visitor's browser&lt;/li&gt;
&lt;li&gt;timestamp for when the visitor lands on the homepage&lt;/li&gt;
&lt;li&gt;a value to represent the timestamp for when a user clicked the signup button or an &lt;code&gt;NaT&lt;/code&gt; value to represent not a timestamp meaning the visitor never clicked the signup button&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;session_start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;microsecond&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;signup_button_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_start_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;random_seconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;session_start_times&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;click_signup_button_times&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;count_of_sessions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;

&lt;span class="n"&gt;cookie_ids_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cookie_ids_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="n"&gt;random_seconds_between_session_start_times&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;session_start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_start_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;random_seconds_between_session_start_times&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;random_seconds_to_signup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;click_signup_button_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session_start_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;random_seconds_to_signup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# randomly choose either the signup button time or np.NaN to be no button click&lt;/span&gt;
    &lt;span class="n"&gt;click_signup_button_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;click_signup_button_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="n"&gt;session_start_times&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_start_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;click_signup_button_times&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;click_signup_button_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a Pandas dataframe from &lt;code&gt;session_start_times&lt;/code&gt; and &lt;code&gt;signup_button_times&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cookie_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cookie_ids_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;session_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_start_times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;click_signup_button_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;click_signup_button_times&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df_sessions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View entire dataset.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cookie_id&lt;/th&gt;
      &lt;th&gt;session_start_time&lt;/th&gt;
      &lt;th&gt;click_signup_button_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:19&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:28&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:36&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:33&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:45&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:54&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:08&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:15&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:35&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:03:06&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:49&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:35&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:01&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:16&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:03:49&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:23&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:27&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:36&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:39&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:03:45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:56&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:04:13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:03:08&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:03:18&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:04:07&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Sum Metric&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;sum&lt;/strong&gt; is the result of adding things. Given the dataset, I don't think there's a single sum metric that's relevant to the business' goals. However, the sum is a calculation necessary to know the average time a visitor spends on the page before clicking the signup button. We'll revisit this calculation later in the ratio section.&lt;/p&gt;
&lt;h3&gt;Count Metric&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;count&lt;/strong&gt; is the total number of occurences of something. A relevant count metric for our business goals is the count of sessions. My hypothesis is that more sessions on the homepage will result in more signups which will likely result in more weekly active users. Therefore, the business wants more sessions per day.&lt;/p&gt;
&lt;p&gt;I can use the Python &lt;a href="https://docs.python.org/3/library/functions.html#len" target="_blank"&gt;len() function&lt;/a&gt; to count the number of session in the dataset.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;count_sessions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;count_sessions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;17
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There were 18 sessions.&lt;/p&gt;
&lt;p&gt;Another relevant count metric is the count of unique visitors to the site in a day. I'll assume each cookie used on a visitors' browser was used properly and corresponds to each user.&lt;/p&gt;
&lt;p&gt;I can count the unique values in the &lt;code&gt;cookie_id&lt;/code&gt; field by using the Pandas series &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.unique.html" target="_blank"&gt;&lt;code&gt;unique()&lt;/code&gt; method&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cookie_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nunique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;14
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There were 14 distinct visitors to the homepage.&lt;/p&gt;
&lt;h3&gt;Average Metric&lt;/h3&gt;
&lt;p&gt;An &lt;strong&gt;average&lt;/strong&gt; is the "central" value from a set of numbers. A relevant average metric that aligns with the business goals is the average time it takes somebody sign up from landing on the homepage first. This average metric gives us a baseline for how much consideration it takes someone to sign up. &lt;/p&gt;
&lt;p&gt;I need to create a new column that's the time duration for each user to sign up after landing on the homepage. I will subtract &lt;code&gt;click_signup_button_time&lt;/code&gt; - &lt;code&gt;session_start_time&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time_duration_until_signup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click_signup_button_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;session_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview the first few sessions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cookie_id&lt;/th&gt;
      &lt;th&gt;session_start_time&lt;/th&gt;
      &lt;th&gt;click_signup_button_time&lt;/th&gt;
      &lt;th&gt;time_duration_until_signup&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:19&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:28&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:36&lt;/td&gt;
      &lt;td&gt;00:00:08&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:33&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:45&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:29&lt;/td&gt;
      &lt;td&gt;00:00:44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:54&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:00&lt;/td&gt;
      &lt;td&gt;00:01:06&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I can use the Pandas &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.mean.html" target="_blank"&gt;&lt;code&gt;mean()&lt;/code&gt; method&lt;/a&gt; to calculate the average of the &lt;code&gt;time_duration_until_signup&lt;/code&gt; values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time_duration_until_signup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Timedelta(&amp;#39;0 days 00:00:56.454545&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For users that do sign up, the average time it takes someone to click the signup button after landing on the homepage is approximately 56 seconds.&lt;/p&gt;
&lt;h3&gt;Percentile&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;percentile&lt;/strong&gt; represents a threshold in which there's a percentage of data points less than that value. A frequently used percentile value is the 50th percentile which represents the median. This means there are approximately 50% of data points smaller than the median value.&lt;/p&gt;
&lt;p&gt;Median can be especially helpful to understand the central tendancy of a set of values when there's a skewness in the values. You can learn more on my &lt;a href="https://dfrieds.com/math/skewness" target="_blank"&gt;skewness article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I can calculate the median &lt;code&gt;time_duration_until_signup&lt;/code&gt; value using the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.median.htmlz" target="_blank"&gt;&lt;code&gt;median&lt;/code&gt; method&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time_duration_until_signup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Timedelta(&amp;#39;0 days 00:01:06&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The median is approximately 1 minute and 6 seconds. In approximately half of sessions with signups, visitors spent less than 1 minute and 6 seconds.&lt;/p&gt;
&lt;h3&gt;Ratio&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;ratio&lt;/strong&gt; comparison of two numbers into a value. One ratio that's critical to the business' goal is to know the proportion of homepage visits that end up with a click on a signup button. This rate is commony called the clickthrough rate. The higher this rate, the more signups and likely more weekly active users down the road. &lt;/p&gt;
&lt;p&gt;Let's first count the number of sessions that have a click of the signup button. I'll count the number of non-null values in the &lt;code&gt;click_signup_button_time&lt;/code&gt; field using the Pandas series &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.notnull.html&lt;code&gt;" target="_blank"&amp;gt;&lt;/code&gt;notnull()` method&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;signup_button_clicks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click_signup_button_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
&lt;span class="n"&gt;signup_button_clicks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;11
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ratio_clicks_to_session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signup_button_clicks&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;count_sessions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ratio_clicks_to_session&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.65
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;0.65 sessions resulted in a signup button click. The higher this ratio, the greater % of visitors we can convert to signup and this would help expand our pool of more potential weekly active users.&lt;/p&gt;
&lt;h3&gt;Probability&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;cookie_id&lt;/code&gt; should specify each visitor to the site based on their browser. One interesting observation is &lt;code&gt;cookie_id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; each made a visit to the homepage, didn't signed up, but later revisited the homepage and did signup. &lt;/p&gt;
&lt;p&gt;I'm curious about the click through probability. This is a metric to define if a unique visitor signed up. The calculation is the count of unique visitors (represented by the &lt;code&gt;cookie_id&lt;/code&gt;) who clicked the button divided by the count of unique visitors.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cookie_id&lt;/th&gt;
      &lt;th&gt;session_start_time&lt;/th&gt;
      &lt;th&gt;click_signup_button_time&lt;/th&gt;
      &lt;th&gt;time_duration_until_signup&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:19&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:28&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:36&lt;/td&gt;
      &lt;td&gt;00:00:08&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:33&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:45&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:01:29&lt;/td&gt;
      &lt;td&gt;00:00:44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:00:54&lt;/td&gt;
      &lt;td&gt;2019-08-25 15:02:00&lt;/td&gt;
      &lt;td&gt;00:01:06&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;count_unique_visitors_who_signed_up&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_sessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click_signup_button_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cookie_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nunique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;count_unique_visitors_who_signed_up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;11
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;count_unique_visitors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_ssessions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cookie_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nunique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;count_unique_visitors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;14
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;click_through_probability&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count_unique_visitors_who_signed_up&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;count_unique_visitors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;click_through_probability&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.79
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The click through probability is 0.79 which means 79% of unique visitors to the homepage created an account. The higher this probability, the greater % of visitors we can convert to signup and this would help increase our pool of more potential weekly active users.&lt;/p&gt;</content><category term="business metrics"></category><category term="python"></category><category term="pandas"></category></entry><entry><title>Exponential Distribution</title><link href="https://dfrieds.com/math/exponential-distribution" rel="alternate"></link><published>2019-08-25T10:50:00-07:00</published><updated>2019-08-25T10:50:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-08-25:/math/exponential-distribution</id><summary type="html">&lt;p&gt;Understand an exponential distribution through a simple example and interpretation&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;strong&gt;exponential distribution&lt;/strong&gt; often represents the amount of time until a specific event occurs. &lt;/p&gt;
&lt;p&gt;One popular example is the duration of time people spend on a website. I'd expect most people to stay on site for 1-4 seconds, fewer people to stay for 4-8 seconds and even fewer to stay for 9+ seconds. To describe this clearly as an exponential distribution, I'd expect exponentially fewer people to stay on site for every increase in time in seconds. &lt;/p&gt;
&lt;p&gt;Another example is the duration of time people spend on line waiting to checkout at a convenience store any given day. I'd expect most people can checkout immediately -  essentially no line. I'd expect exponentially fewer people to wait each successive time increase in seconds. &lt;/p&gt;
&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Visualization styling code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;figure.figsize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="mf"&gt;12.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.5&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;talk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Build an Exponential Distribution&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;numpy&lt;/code&gt; package's &lt;code&gt;random&lt;/code&gt; module, we can call the &lt;a href='https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.random.exponential.html' target="_blank"&gt;&lt;code&gt;exponential()&lt;/code&gt; method&lt;/a&gt; to sample from a list of values that would resemble an exponential distribution. We set the following arguments: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale&lt;/code&gt; as the scale parameter; the higher the value, the less "steep" your exponential distribution&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt; as the number of values drawn from an exponential distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# seed random number generator with fixed value so we always get same values below&lt;/span&gt;
&lt;span class="n"&gt;exponential_distribution_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exponential&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Plot a histogram of the values in &lt;code&gt;exponential_distribution_values&lt;/code&gt; using &lt;a href="https://seaborn.pydata.org/generated/seaborn.distplot.html" target="_blank"&gt;Seaborn's &lt;code&gt;distplot()&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exponential_distribution_values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kde&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;darkgreen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Distribution of Time Spent (in Seconds) on Checkout Line at Convenience Store&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.012&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;amount of time spent on checkout line at convenience store (seconds)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;count of occurences&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="exponential_distribution_files/exponential_distribution_10_0.png"&gt;&lt;/p&gt;
&lt;p&gt;This visualization shows most people spent less than 10 seconds waiting on line. With each increase in time, exponentially fewer people had waited that time amount.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="exponential distribution"></category><category term="python"></category><category term="numpy"></category></entry><entry><title>cut() Method: Bin Values into Discrete Intervals</title><link href="https://dfrieds.com/data-analysis/bin-values-python-pandas" rel="alternate"></link><published>2019-07-16T19:10:00-07:00</published><updated>2019-07-16T19:10:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-07-16:/data-analysis/bin-values-python-pandas</id><summary type="html">&lt;p&gt;Learn how to bin values in Python with pandas using the cut() method and through simple examples&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Why Bin Data&lt;/h3&gt;
&lt;p&gt;Often times you have numerical data on very large scales. Sometimes, it can be easier to bin the values into groups. This is helpful to more easily perform descriptive statistics by groups as a generalization of patterns in the data.&lt;/p&gt;
&lt;h3&gt;Binning in Pandas with Age Example&lt;/h3&gt;
&lt;h4&gt;Create Random Age Data&lt;/h4&gt;
&lt;p&gt;First, let's create a simple pandas DataFrame assigned to the variable &lt;code&gt;df_ages&lt;/code&gt; with just one colum for &lt;code&gt;age&lt;/code&gt;. This column will contain &lt;code&gt;8&lt;/code&gt; random age values between &lt;code&gt;21&lt;/code&gt; inclusive and &lt;code&gt;51&lt;/code&gt; exclusive,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Print out&lt;code&gt;df_ages&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;age&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;47&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;37&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;41&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;49&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Create New Column of &lt;code&gt;age_bins&lt;/code&gt; Via Defining Bin Edges&lt;/h3&gt;
&lt;p&gt;This code creates a new column called &lt;code&gt;age_bins&lt;/code&gt; that sets the &lt;code&gt;x&lt;/code&gt; argument to the &lt;code&gt;age&lt;/code&gt; column in &lt;code&gt;df_ages&lt;/code&gt; and sets the &lt;code&gt;bins&lt;/code&gt; argument to a list of bin edge values. The left bin edge will be exclusive and the right bin edge will be inclusive.&lt;/p&gt;
&lt;p&gt;The bins will be for ages: &lt;code&gt;(20, 29]&lt;/code&gt; (someone in their 20s), &lt;code&gt;(30, 39]&lt;/code&gt;, and &lt;code&gt;(40, 49]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age_bins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Print out&lt;code&gt;df_ages&lt;/code&gt;. We can see &lt;code&gt;age&lt;/code&gt; values are assigned to a proper bin.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;age&lt;/th&gt;
      &lt;th&gt;age_bins&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;45&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;47&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;(29, 39]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;(20, 29]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;(29, 39]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;(29, 39]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Let's verify the unique &lt;code&gt;age_bins&lt;/code&gt; values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age_bins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[(39, 49], (29, 39], (20, 29]]&lt;/span&gt;
&lt;span class="na"&gt;Categories (3, interval[int64]): [(20, 29] &amp;lt; (29, 39] &amp;lt; (39, 49]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create New Column of of &lt;code&gt;age_by_decade&lt;/code&gt; With Labels &lt;code&gt;20s&lt;/code&gt;, &lt;code&gt;30s&lt;/code&gt;, and &lt;code&gt;40s&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This code creates a new column called &lt;code&gt;age_by_decade&lt;/code&gt; with the same first 2 arguments as above, and a third argument of &lt;code&gt;labels&lt;/code&gt; set to a list of values that correspond to how the age values will be put in bins by decades.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age_by_decade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;20s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;30s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;40s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Print out&lt;code&gt;df_ages&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_ages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;age&lt;/th&gt;
      &lt;th&gt;age_bins&lt;/th&gt;
      &lt;th&gt;age_by_decade&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;45&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
      &lt;td&gt;40s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;47&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
      &lt;td&gt;40s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;(29, 39]&lt;/td&gt;
      &lt;td&gt;30s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
      &lt;td&gt;40s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;(20, 29]&lt;/td&gt;
      &lt;td&gt;20s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;(29, 39]&lt;/td&gt;
      &lt;td&gt;30s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;(29, 39]&lt;/td&gt;
      &lt;td&gt;30s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td&gt;(39, 49]&lt;/td&gt;
      &lt;td&gt;40s&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Learn more about the Pandas &lt;code&gt;cut()&lt;/code&gt; method from the &lt;a href='https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.cut.html' target="_blank"&gt;official documentation page&lt;/a&gt;.&lt;/p&gt;</content><category term="categorical data"></category><category term="python"></category><category term="pandas"></category><category term="bin"></category></entry><entry><title>shift() Method: Shift Values in Column Up or Down</title><link href="https://dfrieds.com/data-analysis/shift-method-python-pandas" rel="alternate"></link><published>2019-04-21T08:05:00-07:00</published><updated>2019-04-21T08:05:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-21:/data-analysis/shift-method-python-pandas</id><summary type="html">&lt;p&gt;Utilize the shift() method for a pandas series to shift values in a column up or down. This is equivalent to LAG() or LEAD() window functions in SQL.&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href='https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.shift.html' target='_blank'&gt;&lt;code&gt;shift()&lt;/code&gt; method&lt;/a&gt; for a pandas series helps shift values in a column up or down. This is similar to using the SQL window functions for &lt;code&gt;LAG()&lt;/code&gt; and &lt;code&gt;LEAD()&lt;/code&gt;. You can learn about these SQL window functions via &lt;a href='https://mode.com/resources/sql-tutorial/sql-window-functions/' target='_blank'&gt;Mode's SQL tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this tutorial, I'll walk through an example of using the &lt;code&gt;shift()&lt;/code&gt; pandas series method for analyzing bike rides.&lt;/p&gt;
&lt;h3&gt;Setup Code&lt;/h3&gt;
&lt;h4&gt;Import Module&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 1: Duration Idle Time Between Bike Rides&lt;/h3&gt;
&lt;p&gt;In this example, I assume a service in which I lend out a single bike for people to ride throughout the day in San Francisco. Each record in the dataset is the start and end time for a ride.&lt;/p&gt;
&lt;h4&gt;Create Bike Rides Data&lt;/h4&gt;
&lt;p&gt;The code below creates a list of start and end times of rides.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ride_end_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ride_start_times&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;ride_end_times&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;count_of_rides&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ride&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count_of_rides&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;minutes_between_rides&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ride_end_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;minutes_between_rides&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;minutes_riding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ride_end_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;minutes_riding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;ride_start_times&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ride_start_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ride_end_times&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ride_end_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a pandas dataframe given the lists &lt;code&gt;ride_start_times&lt;/code&gt; and &lt;code&gt;ride_end_times&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ride_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ride_start_times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;ride_end_times&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df_bike_rides&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View the newly created dataframe &lt;code&gt;df_bike_rides&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find the Mean Duration of Time, in Minutes, Bike is Left Idle Between Rides&lt;/h4&gt;
&lt;p&gt;For example, the first ride ended around 4:24PM and was next used for a ride at 5:52PM. I want to calculate a new column that states there was approximately 86 minutes, equivalent to approximately 5160 seconds, of idle time between these rides.&lt;/p&gt;
&lt;p&gt;I want to do a column-by-column comparison. I use the &lt;code&gt;shift()&lt;/code&gt; method to create a new column in &lt;code&gt;df_bike_rides&lt;/code&gt; that's a shift of value in &lt;code&gt;ride_end_time&lt;/code&gt; down one period.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_bike_rides&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;previous_ride_end_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;shift()&lt;/code&gt; method for a pandas series is similar to a window function in SQL using &lt;code&gt;LAG()&lt;/code&gt; and &lt;code&gt;LEAD()&lt;/code&gt;. The same operation above would look like the following in SQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ride_end_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;previous_ride_end_time&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;df_bike_rides&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Given this new column for &lt;code&gt;previous_ride_end_time&lt;/code&gt;, I can subtract the time between a new bike ride's start time and the previous ride's end time. The result is the duration the bike was idle between rides.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle_between_rides&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ride_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_bike_rides&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;previous_ride_end_time&lt;/th&gt;
      &lt;th&gt;duration_bike_idle_between_rides&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;01:02:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;00:16:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;01:37:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;00:55:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;01:25:00&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The new column &lt;code&gt;duration_bike_idle_between_rides&lt;/code&gt; shows the duration of idle bike time between rides in the format HH-MM-SS. The value of &lt;code&gt;01:02:00&lt;/code&gt; is equivalent to saying &lt;em&gt;1 hour and 2 minutes&lt;/em&gt;. Below, I convert that timedelta format into a single numerical value of minutes. I utilize the &lt;code&gt;dt&lt;/code&gt; accessor and &lt;code&gt;total_seconds()&lt;/code&gt; &lt;a href='https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.total_seconds.html' target="_blank"&gt;method&lt;/a&gt; to calculate the total seconds a bike is idle between rides. Then I divide this value by &lt;code&gt;60&lt;/code&gt; to get a value in minutes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minutes_bike_idle_between_rides&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle_between_rides&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total_seconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_bike_rides&lt;/code&gt; below with a new column for the &lt;code&gt;minutes_bike_idle_between_rides&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_rides&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;previous_ride_end_time&lt;/th&gt;
      &lt;th&gt;duration_bike_idle_between_rides&lt;/th&gt;
      &lt;th&gt;minutes_bike_idle_between_rides&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;01:02:00&lt;/td&gt;
      &lt;td&gt;62.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;00:16:00&lt;/td&gt;
      &lt;td&gt;16.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;01:37:00&lt;/td&gt;
      &lt;td&gt;97.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;00:55:00&lt;/td&gt;
      &lt;td&gt;55.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;01:25:00&lt;/td&gt;
      &lt;td&gt;85.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I calculate the mean &lt;code&gt;minutes_bike_idle_between_rides&lt;/code&gt; value as 63 minutes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;avg_minutes_bikes_idle_between_rides&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_rides&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minutes_bike_idle_between_rides&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;avg_minutes_bikes_idle_between_rides&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;63.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 2: Duration Idle Time Between Bike Rides Per Unique Bike&lt;/h3&gt;
&lt;p&gt;This example below is similar to the one above. However, I assume I now operate a fleet of 2 bikes and rent them out for people to ride to specific stations in the city of San Francisco. &lt;/p&gt;
&lt;p&gt;Below I create a pandas dataframe with details on bike ride times, the bike id and the start and end station.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ride_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ride_start_times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;ride_end_times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;start_station&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;21st &amp;amp; Folsom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;21st &amp;amp; Folsom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4th &amp;amp; King&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;24th &amp;amp; Valencia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4th &amp;amp; King&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;16th and Mission&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;end_station&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4th &amp;amp; King&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4th &amp;amp; King&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;24th &amp;amp; Valencia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Embarcadero &amp;amp; Market&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;16th and Mission&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4th &amp;amp; King&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_bike_sharing&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I sort &lt;code&gt;df_bike_sharing&lt;/code&gt; first by the &lt;code&gt;bike_id&lt;/code&gt; column and then the &lt;code&gt;ride_start_time&lt;/code&gt; column.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ride_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;For the &lt;code&gt;bike_id&lt;/code&gt; column, I shift down values by 1 to create a new column called &lt;code&gt;previous_bike_id&lt;/code&gt;. I do this so I can easily compare a bike id to the previous ride's ID to identify the last ride by a bike id for a day.&lt;/p&gt;
&lt;p&gt;Similar to LAG()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
      &lt;th&gt;previous_bike_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;In SQL, this operation would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bike_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;bike_id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;previous_bike_id&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;df_bike_sharing&lt;/span&gt; 
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;bike_id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ride_start_time&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For the &lt;code&gt;ride_end_time&lt;/code&gt; column, I shift down values by 1 to create a new column called &lt;code&gt;previous_ride_end_time&lt;/code&gt;. I do this so I can later find the idle bike time between rides.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;periods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
      &lt;th&gt;previous_bike_id&lt;/th&gt;
      &lt;th&gt;previous_ride_end_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;We only want to calculate a duration the bike was idle in a row if it's a comparison for the same bike id. Below I show the code to replace all values in a row with &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;NaT&lt;/code&gt; if the condition is false. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
      &lt;th&gt;previous_bike_id&lt;/th&gt;
      &lt;th&gt;previous_ride_end_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;With the above change, I calculate &lt;code&gt;ride_start_time&lt;/code&gt; minus &lt;code&gt;previous_ride_end_time&lt;/code&gt; where the above condition holds True. With that calculation, I create a new column called &lt;code&gt;duration_bike_idle&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ride_start_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
      &lt;th&gt;duration_bike_idle&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;01:26:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
      &lt;td&gt;01:37:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;03:23:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;01:25:00&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I drop &lt;code&gt;previous_bike_id&lt;/code&gt; and &lt;code&gt;previous_ride_end_time&lt;/code&gt; since they were intermediary outputs used for calculations. They're not necessary for a final presentation of the critical details.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;previous_bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;previous_ride_end_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The new column &lt;code&gt;duration_bike_idle_seconds&lt;/code&gt; shows the duration of idle bike time between rides in the format HH-MM-SS. The value of &lt;code&gt;01:26:00&lt;/code&gt; is equivalent to saying &lt;em&gt;1 hour and 26 minutes&lt;/em&gt;. Below, I convert that timedelta format into a single numerical value of minutes. I utilize the &lt;code&gt;dt&lt;/code&gt; accessor and &lt;code&gt;total_seconds()&lt;/code&gt; &lt;a href='https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.total_seconds.html' target='_blank'&gt;method&lt;/a&gt; to calculate the total seconds a bike is idle between rides of the same bike id. Then I divide this value by &lt;code&gt;60&lt;/code&gt; to get a value in minutes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle_seconds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total_seconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ride_start_time&lt;/th&gt;
      &lt;th&gt;ride_end_time&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;start_station&lt;/th&gt;
      &lt;th&gt;end_station&lt;/th&gt;
      &lt;th&gt;duration_bike_idle&lt;/th&gt;
      &lt;th&gt;duration_bike_idle_seconds&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2019-04-21 21:23:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 21:41:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2019-04-21 23:07:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 23:23:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;01:26:00&lt;/td&gt;
      &lt;td&gt;5160.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2019-04-22 01:00:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 01:19:29.711347&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24th &amp;amp; Valencia&lt;/td&gt;
      &lt;td&gt;Embarcadero &amp;amp; Market&lt;/td&gt;
      &lt;td&gt;01:37:00&lt;/td&gt;
      &lt;td&gt;5820.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2019-04-21 22:43:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-21 22:51:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21st &amp;amp; Folsom&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;NaT&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2019-04-22 02:14:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 02:20:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;03:23:00&lt;/td&gt;
      &lt;td&gt;12180.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2019-04-22 03:45:29.711347&lt;/td&gt;
      &lt;td&gt;2019-04-22 03:55:29.711347&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;16th and Mission&lt;/td&gt;
      &lt;td&gt;4th &amp;amp; King&lt;/td&gt;
      &lt;td&gt;01:25:00&lt;/td&gt;
      &lt;td&gt;5100.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Here is the average seconds each &lt;code&gt;bike_id&lt;/code&gt; is idle during the day in seconds between the first and last ride. I group by the &lt;code&gt;bike_id&lt;/code&gt; column and calculate the mean of the &lt;code&gt;duration_bike_idle_seconds_time&lt;/code&gt; column. I reset the index and rename the columns so this final output is easier to understand.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_bike_sharing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bike_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle_seconds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;duration_bike_idle_seconds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;avg_seconds_idle_between_rides&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;bike_id&lt;/th&gt;
      &lt;th&gt;avg_seconds_idle_between_rides&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5490.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;8640.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Bike id of &lt;code&gt;22&lt;/code&gt; was left idle longer between rides than the bike id of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;</content><category term="shift method"></category><category term="pandas"></category><category term="python"></category></entry><entry><title>Pandas rank() Method: Equivalent to ROW_NUMBER(), RANK(), DENSE_RANK() and NTILE() SQL Window Functions</title><link href="https://dfrieds.com/data-analysis/rank-method-python-pandas" rel="alternate"></link><published>2019-04-15T09:30:00-07:00</published><updated>2019-04-15T09:30:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-15:/data-analysis/rank-method-python-pandas</id><summary type="html">&lt;p&gt;Utilize the rank() method for pandas series - equivalent to ROW_NUMBER(), RANK(), DENSE_RANK() and NTILE() SQL window functions&lt;/p&gt;</summary><content type="html">&lt;p&gt;In SQL, popular window functions include: &lt;code&gt;ROW_NUMBER()&lt;/code&gt;, &lt;code&gt;RANK()&lt;/code&gt;, &lt;code&gt;DENSE_RANK()&lt;/code&gt; and &lt;code&gt;NTILE()&lt;/code&gt;. These are helpful for creating a new column that's a rank of some other values in a column, perhaps partitioned by one or multiple groups. You can learn about these SQL window functions via &lt;a href='https://mode.com/resources/sql-tutorial/sql-window-functions/' target='_blank'&gt;Mode's SQL tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, using pandas in Python, the &lt;a href='https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.rank.html' target="_blank"&gt;&lt;code&gt;rank()&lt;/code&gt; method&lt;/a&gt; for a series provides similar utility to the SQL window functions listed above.&lt;/p&gt;
&lt;p&gt;In this tutorial, I'll cover the &lt;code&gt;rank()&lt;/code&gt; method in pandas with an example of real estate transactions data and later quiz scores.&lt;/p&gt;
&lt;h3&gt;Setup Code&lt;/h3&gt;
&lt;h4&gt;Import Module&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Gradient Used to Highlight Table Outputs&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;light_palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightgreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 1: Count of New Sellers Per Day&lt;/h3&gt;
&lt;h4&gt;Create Real Estate Transaction Dataset&lt;/h4&gt;
&lt;p&gt;I'll create a small dataset of 8 real estate transactions that include a close date and seller name for each house sale.&lt;/p&gt;
&lt;p&gt;Take note that Julia sold 5 homes with some transactions on separate days. Lara also sold 2 homes on different days.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-07&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Emily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View entire &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2012-08-07&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Convert &lt;code&gt;close_date&lt;/code&gt; column to datetime type in Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Find Rank of Homes Sold for Each Seller by Close Date&lt;/h4&gt;
&lt;p&gt;I want to know the rank of each house sale &lt;em&gt;by person ordered by time&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Based on looking at the table above, Julia sold her first, second and third house on August 1st. On August 3rd, Julia sold her fourth house. &lt;/p&gt;
&lt;p&gt;For the &lt;code&gt;df&lt;/code&gt; dataframe, I want to create a new column that shows the numerical rank values for each person's home sales by day. To do this, I group by the &lt;code&gt;seller_name&lt;/code&gt; column, and apply the &lt;code&gt;rank()&lt;/code&gt; method to the &lt;code&gt;close_date&lt;/code&gt; colummn. I set the &lt;code&gt;rank()&lt;/code&gt; argument &lt;code&gt;methond='first'&lt;/code&gt; to rank the sales of houses per person, ordered by date, in the order they appear. The new column with rank values is called &lt;code&gt;rank_seller_by_close_date&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;method='first'&lt;/code&gt; for the &lt;code&gt;rank()&lt;/code&gt; method for pandas series is equivalent to the &lt;code&gt;ROW_NUMBER()&lt;/code&gt; window function in SQL.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below I output &lt;code&gt;df&lt;/code&gt; and highlight the &lt;code&gt;rank_seller_by_close_date&lt;/code&gt; with shades of green designated by numerical value. The higher the rank value, the darker the green highlighted background. &lt;code&gt;df&lt;/code&gt; is ordered by &lt;code&gt;close_date&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col2 {
            background-color:  #e9fce9;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col2 {
            background-color:  #e9fce9;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col2 {
            background-color:  #d3f8d3;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col2 {
            background-color:  #e9fce9;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col2 {
            background-color:  #bcf5bc;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col2 {
            background-color:  #d3f8d3;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col2 {
            background-color:  #a6f1a6;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col2 {
            background-color:  #90ee90;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;0&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col1" class="data row0 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;1&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col2" class="data row1 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;2&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col2" class="data row2 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;3&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col1" class="data row3 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col2" class="data row3 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;4&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col1" class="data row4 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col2" class="data row4 col2" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;6&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col1" class="data row6 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col2" class="data row6 col2" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;7&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col2" class="data row7 col2" &gt;5&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;It's difficult to easily see the order of ranks for each seller by date. Below, I output &lt;code&gt;df&lt;/code&gt; sorted by &lt;code&gt;seller_name&lt;/code&gt; and then &lt;code&gt;rank_seller_by_close_date&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Much better! It's clear Julia's home sales are ranked by from oldest to newest. Even though she made two homes sales on August 1st, one is given a rank value of &lt;code&gt;1&lt;/code&gt; and then next &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col2 {
            background-color:  #e9fce9;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col2 {
            background-color:  #e9fce9;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col2 {
            background-color:  #d3f8d3;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col2 {
            background-color:  #bcf5bc;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col2 {
            background-color:  #a6f1a6;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col2 {
            background-color:  #90ee90;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col2 {
            background-color:  #e9fce9;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col2 {
            background-color:  #d3f8d3;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;3&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col1" class="data row0 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;1&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col2" class="data row1 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;2&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col2" class="data row2 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;4&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col2" class="data row3 col2" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;6&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col1" class="data row4 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col2" class="data row4 col2" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;7&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col1" class="data row5 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col2" class="data row5 col2" &gt;5&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;0&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col1" class="data row6 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;5&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col1" class="data row7 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col2" class="data row7 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;h4&gt;Find Count of New Sellers Per Seller Per Day&lt;/h4&gt;
&lt;p&gt;I can utilize the rankings above to find the count of new sellers by day. &lt;/p&gt;
&lt;p&gt;For example, Julia is a &lt;em&gt;new&lt;/em&gt; home seller on August 1st because she has a rank of &lt;code&gt;1&lt;/code&gt; that day. Julia would &lt;em&gt;not&lt;/em&gt; be counted as a &lt;em&gt;new&lt;/em&gt; home seller on August 3rd because she has a rank of &lt;code&gt;3&lt;/code&gt; that day. &lt;/p&gt;
&lt;p&gt;I can filter &lt;code&gt;df&lt;/code&gt; by record in which &lt;code&gt;rank_seller_by_close_date&lt;/code&gt; is equal to &lt;code&gt;1&lt;/code&gt;. The three records for Lara, Julia and Emily show the &lt;code&gt;close_date&lt;/code&gt; for each in which they sold their first home.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
      &lt;th&gt;rank_seller_by_close_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Let's take the table above and group by &lt;code&gt;close_date&lt;/code&gt; to find the count of &lt;code&gt;close_date&lt;/code&gt; observations. Below is the output.&lt;/p&gt;
&lt;p&gt;Similar to above, on &lt;code&gt;2012-08-01&lt;/code&gt;, we can see &lt;code&gt;2&lt;/code&gt; new sellers representing Lara and Julia. On &lt;code&gt;2012-08-02&lt;/code&gt;, we can see &lt;code&gt;1&lt;/code&gt; new seller representing Emily.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;count_new_sellers_of_homes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;count_new_sellers_of_homes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Example 2: Count of New Sellers By Agency Per Day&lt;/h3&gt;
&lt;p&gt;In example 1, I wanted the count of new sellers by day. In this example 2, I want the count of sellers by agency per day.&lt;/p&gt;
&lt;p&gt;Below, I add a new column called &lt;code&gt;agency&lt;/code&gt; that goes for each home sale.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HomeSales&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HomeSales&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below I print the output of &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
      &lt;th&gt;rank_seller_by_close_date&lt;/th&gt;
      &lt;th&gt;agency&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2012-08-07&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;5.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I want to create the rank value of home sales by agency per seller ordered by close date. This is valuable so each agency can understand the count of new sellers per day. &lt;/p&gt;
&lt;p&gt;Below, I group by two fields, &lt;code&gt;agency&lt;/code&gt; and then &lt;code&gt;seller_name&lt;/code&gt; and find a rank value ordered by &lt;code&gt;close_date&lt;/code&gt;. I store these rank values in a new column called &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below I output &lt;code&gt;df&lt;/code&gt; and highlight the important column &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt;. The order of ranks below is a bit confusing. I'll re-order records after below's output.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col4 {
            background-color:  #cbf7cb;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col4 {
            background-color:  #cbf7cb;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col4 {
            background-color:  #aef3ae;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col4 {
            background-color:  #90ee90;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col1" class="data row0 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col2" class="data row1 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col4" class="data row1 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col2" class="data row2 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col4" class="data row2 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col1" class="data row3 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col2" class="data row3 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col3" class="data row3 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col4" class="data row3 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col1" class="data row4 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col2" class="data row4 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col3" class="data row4 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col1" class="data row6 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col2" class="data row6 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col3" class="data row6 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col4" class="data row6 col4" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col2" class="data row7 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col3" class="data row7 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col4" class="data row7 col4" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;The output below is easier to understand because I sort &lt;code&gt;df&lt;/code&gt; by &lt;code&gt;agency&lt;/code&gt; and then &lt;code&gt;seller_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Below, notice how &lt;code&gt;Fifer&lt;/code&gt; &lt;em&gt;first&lt;/em&gt; helped Julia sell a home on &lt;code&gt;2012-08-01&lt;/code&gt; and first helped Lara sell a home on &lt;code&gt;2012-08-01&lt;/code&gt;. Both of these rows have a &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt; value of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then, when Julia sold a home with &lt;code&gt;HomeSales&lt;/code&gt; on &lt;code&gt;2012-08-03&lt;/code&gt;, that also has a &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt; value of &lt;code&gt;1&lt;/code&gt; because that was her &lt;em&gt;first&lt;/em&gt; home sold by date with that agency, &lt;code&gt;HomeSales&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col4 {
            background-color:  #e9fce9;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col4 {
            background-color:  #cbf7cb;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col4 {
            background-color:  #aef3ae;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col4 {
            background-color:  #90ee90;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col4 {
            background-color:  #e9fce9;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col4 {
            background-color:  #cbf7cb;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col4 {
            background-color:  #e9fce9;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col4 {
            background-color:  #e9fce9;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col1" class="data row0 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col2" class="data row1 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col4" class="data row1 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col2" class="data row2 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col4" class="data row2 col4" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col2" class="data row3 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col3" class="data row3 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col4" class="data row3 col4" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col1" class="data row4 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col2" class="data row4 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col3" class="data row4 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col1" class="data row6 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col3" class="data row6 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col4" class="data row6 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col2" class="data row7 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col3" class="data row7 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col4" class="data row7 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;I still want the count of &lt;em&gt;new&lt;/em&gt; sellers with each agency per day. Below is a filter of &lt;code&gt;df&lt;/code&gt; for records in which &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt; equals &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
      &lt;th&gt;rank_seller_by_close_date&lt;/th&gt;
      &lt;th&gt;agency&lt;/th&gt;
      &lt;th&gt;first_rank_agency_seller_by_close_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;To get the final final output a count of new sellers with each agency per day, I take the filtered dataframe from above, group by &lt;code&gt;agency&lt;/code&gt; and then &lt;code&gt;close_date&lt;/code&gt;, and then compute the group size. &lt;/p&gt;
&lt;p&gt;Above I see two records of homes sold on &lt;code&gt;2012-08-01&lt;/code&gt; by Lara and Julia with the agency &lt;code&gt;Fifer&lt;/code&gt;. In the output from the group by operation below, I see an equivalent first record for &lt;code&gt;Fifer&lt;/code&gt; on &lt;code&gt;2012-08-01&lt;/code&gt; with &lt;code&gt;count_new_sellers_of_homes&lt;/code&gt; equal to &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;count_new_sellers_of_homes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;agency&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;count_new_sellers_of_homes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Example 3: Pandas Rank &lt;code&gt;method='min'&lt;/code&gt; Comparison&lt;/h3&gt;
&lt;p&gt;The pandas &lt;code&gt;rank()&lt;/code&gt; method has an argument &lt;code&gt;method&lt;/code&gt; that can be set to &lt;code&gt;min&lt;/code&gt;. This is different than the method used above with &lt;code&gt;method&lt;/code&gt; set to &lt;code&gt;first&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;method='min'&lt;/code&gt; argument for the &lt;code&gt;rank()&lt;/code&gt; method for pandas series is equivalent to the &lt;code&gt;RANK()&lt;/code&gt; window function in SQL.&lt;/p&gt;
&lt;p&gt;Notice how with &lt;code&gt;method='min'&lt;/code&gt;, in the column &lt;code&gt;min_rank_agency_seller_by_close_date&lt;/code&gt;, Julia's two home sales on August 1, 2012 are both given a tied rank of 1. &lt;/p&gt;
&lt;p&gt;Then, the min rank value &lt;em&gt;skips&lt;/em&gt; a value of &lt;code&gt;2&lt;/code&gt; and Julia's next sale on August 5, 2012 has a value of &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;min_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;min_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col5 {
            background-color:  #aef3ae;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col5 {
            background-color:  #90ee90;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col5 {
            background-color:  #cbf7cb;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col5 {
            background-color:  #e9fce9;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col5" &gt;min_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col1" class="data row0 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col5" class="data row0 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col2" class="data row1 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col4" class="data row1 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col5" class="data row1 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col2" class="data row2 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col4" class="data row2 col4" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col5" class="data row2 col5" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col2" class="data row3 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col3" class="data row3 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col4" class="data row3 col4" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col5" class="data row3 col5" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col1" class="data row4 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col2" class="data row4 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col3" class="data row4 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col5" class="data row4 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col5" class="data row5 col5" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col1" class="data row6 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col3" class="data row6 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col4" class="data row6 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col5" class="data row6 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col2" class="data row7 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col3" class="data row7 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col4" class="data row7 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col5" class="data row7 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;The use case for &lt;code&gt;method='first'&lt;/code&gt; versus &lt;code&gt;method='min'&lt;/code&gt; varies on a case by case basis. It's important to understand your data well to make sure you utilize the correct one, though you can of course easily swap the argument's value.&lt;/p&gt;
&lt;h3&gt;Example 4: Pandas Rank &lt;code&gt;method='dense'&lt;/code&gt; Comparison&lt;/h3&gt;
&lt;p&gt;The pandas &lt;code&gt;rank()&lt;/code&gt; method has an argument &lt;code&gt;method&lt;/code&gt; that can be set to &lt;code&gt;'dense'&lt;/code&gt;. This is different than &lt;code&gt;method&lt;/code&gt; set to either &lt;code&gt;'first'&lt;/code&gt; or &lt;code&gt;'min'&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Notice how with &lt;code&gt;method='dense'&lt;/code&gt;, in the column &lt;code&gt;dense_rank_agency_seller_by_close_date&lt;/code&gt;, Julia's two home sales on August 1, 2012 are both given a tied rank of &lt;code&gt;1&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Then, the dense rank value &lt;em&gt;does not skip&lt;/em&gt; a value of &lt;code&gt;2&lt;/code&gt; and Julia's next sale on August 5, 2012 has a value of &lt;code&gt;2&lt;/code&gt;. &lt;code&gt;'dense'&lt;/code&gt; is different than &lt;code&gt;min&lt;/code&gt;! &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col6 {
            background-color:  #bcf5bc;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col6 {
            background-color:  #90ee90;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col6 {
            background-color:  #bcf5bc;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col6 {
            background-color:  #e9fce9;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col5" &gt;min_rank_agency_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col6" &gt;dense_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col1" class="data row0 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col5" class="data row0 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col6" class="data row0 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col2" class="data row1 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col4" class="data row1 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col5" class="data row1 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col6" class="data row1 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col2" class="data row2 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col4" class="data row2 col4" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col5" class="data row2 col5" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col6" class="data row2 col6" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col2" class="data row3 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col3" class="data row3 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col4" class="data row3 col4" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col5" class="data row3 col5" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col6" class="data row3 col6" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col1" class="data row4 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col2" class="data row4 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col3" class="data row4 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col5" class="data row4 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col6" class="data row4 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col5" class="data row5 col5" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col6" class="data row5 col6" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col1" class="data row6 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col3" class="data row6 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col4" class="data row6 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col5" class="data row6 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col6" class="data row6 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col2" class="data row7 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col3" class="data row7 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col4" class="data row7 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col5" class="data row7 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col6" class="data row7 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;The use case for &lt;code&gt;'dense'&lt;/code&gt; varies on a case by case basis. A second reminder - please understand your data well and why you'd choose &lt;code&gt;'dense'&lt;/code&gt; over other options.&lt;/p&gt;
&lt;h3&gt;Example 5: Pandas Rank &lt;code&gt;pct=True&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The pandas series &lt;code&gt;rank()&lt;/code&gt; method has another argument called &lt;code&gt;pct&lt;/code&gt; that can be set to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. By default, it's &lt;code&gt;False&lt;/code&gt;. This &lt;code&gt;pct&lt;/code&gt; argument computes the percentage rank of data.&lt;/p&gt;
&lt;p&gt;To set the argument &lt;code&gt;pct=True&lt;/code&gt; is similar to the &lt;code&gt;NTILE(100)&lt;/code&gt; window function in SQL.&lt;/p&gt;
&lt;h4&gt;Create Class Quiz Score Data&lt;/h4&gt;
&lt;p&gt;Below I create fictional data for 11 students in a class that took the same quiz. The max possible score is &lt;code&gt;100&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I remember in school, teachers told me I was in a certain percentile based on my GPA or score on a quiz. Therefore, I created a dataset I'll remember in relation to percentile rankings!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;class_quiz_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jamie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Joe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jake&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;James&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Joy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jared&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jaime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jay&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                   &lt;span class="s1"&gt;&amp;#39;score&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_quiz_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_quiz_scores&lt;/code&gt; as a dataframe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;James&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Dan&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Joy&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Jared&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Jaime&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Jay&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find the Percent Rank of Each Score in the Class&lt;/h4&gt;
&lt;p&gt;Below I create a new column called &lt;code&gt;score_percent_rank&lt;/code&gt; that's a ranking of scores in the &lt;code&gt;score&lt;/code&gt; column.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score_percent_rank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_quiz_scores&lt;/code&gt; as a dataframe below. Notice how a high quiz score by Dan of &lt;code&gt;91&lt;/code&gt; has a rank value of &lt;code&gt;0.81&lt;/code&gt;. I think of this as the 81st percentile. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;score_percent_rank&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;0.272727&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;0.181818&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;James&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
      &lt;td&gt;0.909091&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Dan&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Joy&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Jared&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
      &lt;td&gt;0.090909&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Jaime&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;0.363636&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Jay&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;To make this rank easier to understand, I will multiply all these values by &lt;span class="math"&gt;\(100\)&lt;/span&gt; and round to the nearest integer value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score_percentile_rank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score_percent_rank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_quiz_scores&lt;/code&gt; as a dataframe below. Now, Dan's &lt;code&gt;score&lt;/code&gt; of &lt;code&gt;91&lt;/code&gt; has a score &lt;code&gt;score_percentile_rank&lt;/code&gt; of &lt;code&gt;82&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;score_percent_rank&lt;/th&gt;
      &lt;th&gt;score_percentile_rank&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;0.272727&lt;/td&gt;
      &lt;td&gt;27.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;50.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;0.181818&lt;/td&gt;
      &lt;td&gt;18.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;100.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;James&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
      &lt;td&gt;0.909091&lt;/td&gt;
      &lt;td&gt;91.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Dan&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
      &lt;td&gt;82.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Joy&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;64.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Jared&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
      &lt;td&gt;73.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
      &lt;td&gt;0.090909&lt;/td&gt;
      &lt;td&gt;9.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Jaime&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;0.363636&lt;/td&gt;
      &lt;td&gt;36.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Jay&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;50.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "1em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="rank"></category><category term="pandas"></category><category term="python"></category></entry><entry><title>Self Join</title><link href="https://dfrieds.com/data-analysis/self-join-python-pandas" rel="alternate"></link><published>2019-04-14T06:20:00-07:00</published><updated>2019-04-14T06:20:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-14:/data-analysis/self-join-python-pandas</id><summary type="html">&lt;p&gt;Self join a table in python and pandas&lt;/p&gt;</summary><content type="html">&lt;p&gt;In SQL, a popular type of join is a self join which joins a table to itself. This is helpful for comparing rows to one another, based on their values in columns, in a &lt;em&gt;single&lt;/em&gt; table. &lt;/p&gt;
&lt;p&gt;In this article, I'll walk through two examples in which self joins can be helpful.&lt;/p&gt;
&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 1: Basic Real Estate Transactions&lt;/h3&gt;
&lt;h4&gt;Create Dataset&lt;/h4&gt;
&lt;p&gt;I'll create a small dataset of 5 real estate transactions that include a unique transaction id for each purchase, a close date for each sale, the buyer's name and seller's name.&lt;/p&gt;
&lt;p&gt;Notice how Julia was the buyer for transaction id &lt;code&gt;1&lt;/code&gt; and later a seller for transaction id &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transaction_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Joe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jake&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jamie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jackie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Barbara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Emily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mason&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View entire &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;buyer_name&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;Barbara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jackie&lt;/td&gt;
      &lt;td&gt;Mason&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find People Who Were Both Buyers and Sellers&lt;/h4&gt;
&lt;p&gt;Often times, people buy homes and then later sell that homes. In this dataset, I'm curious, which people both bought and sold a home? We noticed earlier Julia bought a home and later sold one so Julia's name should be the only result.&lt;/p&gt;
&lt;p&gt;One method of finding a solution is to do a self join. In pandas, the DataFrame object has a &lt;code&gt;merge()&lt;/code&gt; method. Below, for &lt;code&gt;df&lt;/code&gt;, for the &lt;code&gt;merge&lt;/code&gt; method, I'll set the following arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;right=df&lt;/code&gt; so that the first &lt;code&gt;df&lt;/code&gt; listed in the statement merges with another DataFrame, &lt;code&gt;df&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;left_on='buyer_name'&lt;/code&gt; is the column to join from the left &lt;code&gt;df&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;right_on='seller_name&lt;/code&gt; is the column to join from the right &lt;code&gt;df&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, these arguments are also set in the &lt;code&gt;merge&lt;/code&gt; method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;how='inner'&lt;/code&gt; so returned results only show records in which the left &lt;code&gt;df&lt;/code&gt; has a value in &lt;code&gt;buyer_name&lt;/code&gt; equivalent to the right &lt;code&gt;df&lt;/code&gt; with a value of &lt;code&gt;seller_name&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;suffixes=(‘_x’, ‘_y’)&lt;/code&gt; so &lt;code&gt;_x&lt;/code&gt; is appended to the end of column names from our left &lt;code&gt;df&lt;/code&gt; if those column names originally match the right &lt;code&gt;df&lt;/code&gt;. &lt;code&gt;_y&lt;/code&gt; is appended to the end of column names from our right &lt;code&gt;df&lt;/code&gt; if those column names originally match the left &lt;code&gt;df&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id_x&lt;/th&gt;
      &lt;th&gt;close_date_x&lt;/th&gt;
      &lt;th&gt;buyer_name_x&lt;/th&gt;
      &lt;th&gt;seller_name_x&lt;/th&gt;
      &lt;th&gt;transaction_id_y&lt;/th&gt;
      &lt;th&gt;close_date_y&lt;/th&gt;
      &lt;th&gt;buyer_name_y&lt;/th&gt;
      &lt;th&gt;seller_name_y&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Our output of &lt;code&gt;df2&lt;/code&gt; shows in a single record, the details of Julia who bought a home and sold a home.&lt;/p&gt;
&lt;p&gt;We can find all unique values in the &lt;code&gt;buyer_name_x&lt;/code&gt; field to programmatically arrive at our result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;array([&amp;#39;Julia&amp;#39;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 2: Intermediate Real Estate Transactions&lt;/h3&gt;
&lt;h4&gt;Append New Row to Dataset&lt;/h4&gt;
&lt;p&gt;Below, I create a new row for another real estate transaction in which Julia buys a 2nd home.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View new &lt;code&gt;df&lt;/code&gt; with additional row.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;buyer_name&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;Barbara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jackie&lt;/td&gt;
      &lt;td&gt;Mason&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Mary&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find People Who Are Both Buyers and Sellers&lt;/h4&gt;
&lt;p&gt;This is the same ask as with Example 1. However, our dataset is slightly different so a self join will return different results.&lt;/p&gt;
&lt;p&gt;I'll use the same code to perform a self join but assign the output to &lt;code&gt;df&lt;/code&gt; instead.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id_x&lt;/th&gt;
      &lt;th&gt;close_date_x&lt;/th&gt;
      &lt;th&gt;buyer_name_x&lt;/th&gt;
      &lt;th&gt;seller_name_x&lt;/th&gt;
      &lt;th&gt;transaction_id_y&lt;/th&gt;
      &lt;th&gt;close_date_y&lt;/th&gt;
      &lt;th&gt;buyer_name_y&lt;/th&gt;
      &lt;th&gt;seller_name_y&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Mary&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;There are &lt;em&gt;two&lt;/em&gt; records! &lt;/p&gt;
&lt;p&gt;The first record indicates Julia's purchase for &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; and later a sale with &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The second record indicates Julia's purchase for &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;6&lt;/code&gt; and later a sale with &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;This is the correct output as I wanted all rows of &lt;code&gt;df&lt;/code&gt; to be joined with &lt;code&gt;df&lt;/code&gt; in which a &lt;code&gt;buyer_name&lt;/code&gt; from the left &lt;code&gt;df&lt;/code&gt; is equivalent to a &lt;code&gt;seller_name&lt;/code&gt; from the right &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I can find all unique values of the &lt;code&gt;buyer_name_x&lt;/code&gt; field to programmatically arrive at our result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;array([&amp;#39;Julia&amp;#39;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;</content><category term="self join"></category><category term="pandas merge"></category><category term="python"></category><category term="pandas"></category></entry><entry><title>Command Line Basic Minesweeper</title><link href="https://dfrieds.com/python/cl-minesweeper" rel="alternate"></link><published>2019-03-29T19:58:00-07:00</published><updated>2019-03-29T19:58:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-03-29:/python/cl-minesweeper</id><summary type="html">&lt;p&gt;Medium Python algorithm prototype of a basic version of Minesweeper as a command line game&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this implementation, the minefield grid is always 4x4 and there's just one mine on the field. &lt;/p&gt;
&lt;p&gt;Additional work could be done on this Minesweeper implementation to allow for more adjustable field sizes, additional mines on the field and automatic reveal of coordinates that don't contain any adjacent mines. &lt;/p&gt;
&lt;p&gt;For a more robust code solution, I'd recommend more modularity with functions and the use of object-oriented programming to easily allow for reuse of code with inheritance, extensability to various platforms and additional benefits.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(asctime)-16s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(levelname)-12s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(lineno)-6s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(funcName)-28s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(message)-8s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;datefmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%H:%M:%SS&amp;#39;&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play_minesweeper&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;minefield_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;minefield_columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;set random mine row and column index given minefield size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mine_row_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_rows&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mine_column_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_columns&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is at: ({0}, {1})&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_column_index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_ones_possible_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_length&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Finds all possible indices of 1s that surround mine&lt;/span&gt;
&lt;span class="sd"&gt;        Function only works under assumption that minefield is square (all sides equal)&lt;/span&gt;
&lt;span class="sd"&gt;        :param mine_index: index of the mine for its corresponding row or column&lt;/span&gt;
&lt;span class="sd"&gt;        :param minefield_length: count of squares along one edge of minefield&lt;/span&gt;
&lt;span class="sd"&gt;        :return: one_indices&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;one_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;minefield_length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is located in the bottom row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1s can only be in 2nd to bottom row and bottom row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;one_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;one_indices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is in the first aka top row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1s can only be in the top and 2nd to the top row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;one_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;one_indices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is located in one of the middle rows&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1s can be above, on same and below the row of the mine in hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;one_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;one_indices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;one_indices&lt;/span&gt;

    &lt;span class="n"&gt;row_ones_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;row_ones_indices: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_ones_indices&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;column_ones_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_column_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;column_ones_indices: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_ones_indices&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create list with list items of potential row indices and column indices of 1s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_ones_indices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_ones_indices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;coordinate_indices_lists: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create empty list to store all possible coordinates of positions of 1s; not all coord. on field&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ones_coordinates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find cartesian product of values in coordinate_indices_lists&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;append coordinate of 1 to ones_coordinates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ones_coordinates: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generate hidden_minefield variable as a list of lists&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hidden_minefield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create counter for all 1s and 0s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;loop over all values in hidden_minefield; fill in with appropriate values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;column_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

            &lt;span class="c1"&gt;# check if this value on the hidden_minefield is the value of the mine&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_column_index&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# check if this value on the hidden_minefield is in the ones_coordinates list&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

            &lt;span class="c1"&gt;# the value is not the mine or adjacent to the mine&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;output hidden_minefield with each row on a newline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create the user interface minefield of all ? values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;empty_list&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;empty_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sleep so print messages appear after logging messages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Time for the user to play! Try to avoid the mines!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# only enough guesses for user to guess all 1s and 0s; otherwise, user guesses mine and game ends&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;guess_counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;In minefield, row values start at 1 and go to {0}.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;In minefield, column values start at 1 and go to {0}.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;This is the user_interface_minefield:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# prompt user to guess row and column&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_player_input&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;guess_row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Guess row: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;guess_column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Guess column: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt;

        &lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_player_input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_condition_guess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_edge_size&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You didn&amp;#39;t guess an integer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;guess_index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;guess_index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;minefield_edge_size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your guess integer is out of range of 1-4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bad_guess_status&lt;/span&gt;

        &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;check_condition_guess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;check_condition_guess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please make a more appropriate guess&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your guessed coordinate: ({0}, {1})&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;# create new variables for offsets of 1 less than guesses because we use zero-based numbering in Python&lt;/span&gt;
        &lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;guess_row&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

        &lt;span class="c1"&gt;# make reveal of board and notify user with text change&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You guessed a 1 so you&amp;#39;re nearby a mine.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You guessed far from a mine. You&amp;#39;re ok!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;

        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You guessed the mine! You lose!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Here&amp;#39;s what the minefield looks like:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;guess_counter&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You have made {0} guess&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You have made {0} guesses&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;play_minesweeper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;16&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;19&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;41&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;located&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;42&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;48&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;row_ones_indices&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;41&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;located&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;42&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;50&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;column_ones_indices&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;52&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;potential&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;indices&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;indices&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;54&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;56&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;possible&lt;/span&gt; &lt;span class="n"&gt;coordinates&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;58&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;cartesian&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;62&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;64&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;lists&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;67&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;70&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;appropriate&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;88&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;newline&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;92&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;98&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;sleep&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt; &lt;span class="n"&gt;appear&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;


&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;play&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;Try&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;avoid&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mines&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;


&lt;span class="n"&gt;Guess&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Guess&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;guessed&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;guessed&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;re nearby a mine.&lt;/span&gt;
&lt;span class="s1"&gt;You have made 1 guess&lt;/span&gt;

&lt;span class="s1"&gt;In minefield, row values start at 1 and go to 4.&lt;/span&gt;
&lt;span class="s1"&gt;In minefield, column values start at 1 and go to 4.&lt;/span&gt;

&lt;span class="s1"&gt;This is the user_interface_minefield:&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;


&lt;span class="s1"&gt;Guess row:  4&lt;/span&gt;
&lt;span class="s1"&gt;Guess column:  4&lt;/span&gt;


&lt;span class="s1"&gt;Your guessed coordinate: (4, 4)&lt;/span&gt;
&lt;span class="s1"&gt;You guessed far from a mine. You&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;guesses&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="functions"></category><category term="loops"></category><category term="lists"></category><category term="itertools"></category><category term="logger"></category><category term="command line"></category></entry><entry><title>Spearman's Correlation</title><link href="https://dfrieds.com/math/spearmans-correlation" rel="alternate"></link><published>2019-03-29T19:50:00-07:00</published><updated>2019-03-29T19:50:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-03-29:/math/spearmans-correlation</id><summary type="html">&lt;p&gt;Learn Spearman's correlation to measure the strength and direction of association between two numerical variables&lt;/p&gt;</summary><content type="html">&lt;p&gt;Spearman's correlation is a measure of rank correlation between two numerical variables. It's often denoted as &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; or &lt;span class="math"&gt;\(r_{s}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For example, a Spearman's correlation test can help better identify the relationship between carats in a diamond ring and its price. Does more carats equate to a higher price?&lt;/p&gt;
&lt;p&gt;The Spearman's rank correlation is a non-parametric test so there are no requirements of the distributions of the variables to be tested. &lt;/p&gt;
&lt;p&gt;On the other hand, in a Pearson's correlation test, there is assumed to be a &lt;em&gt;linear&lt;/em&gt; relationship between two variables. However, the Spearman's rank correlation test can identify non-linear relationships between two variables.&lt;/p&gt;
&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;talk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;darkgrid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Data Requirements&lt;/h3&gt;
&lt;p&gt;The assumption for the Spearman's rank correlation test is that there is a monotonic relationship between the two variables being tested. A &lt;strong&gt;monotonic relationship&lt;/strong&gt; exists when one of two following situations exists:&lt;/p&gt;
&lt;p&gt;1) As one variable increases, the other variable increases.&lt;/p&gt;
&lt;p&gt;2) As one variable increases, the other variable decreases.&lt;/p&gt;
&lt;p&gt;Spearman's correlation determines the &lt;em&gt;strength&lt;/em&gt; (how large or small) and &lt;em&gt;direction&lt;/em&gt; (positive or negative) of the monotonic relationship between two variables.&lt;/p&gt;
&lt;h3&gt;Visual Examples of Monotonic and Non-Monotonic Relationships&lt;/h3&gt;
&lt;p&gt;Below, as the x-values increase, the y-values almost always increase too so there is a monotonic relationship.&lt;/p&gt;
&lt;p&gt;Note there is an observation in which the x-value at &lt;span class="math"&gt;\(-1\)&lt;/span&gt; has a smaller y-value of &lt;span class="math"&gt;\(-1\)&lt;/span&gt; than the previous x-value of &lt;span class="math"&gt;\(-2\)&lt;/span&gt;. So there is not a &lt;em&gt;perfect&lt;/em&gt; positive monotonic relationship. Generally, as long as the far majority of observations follow one of the two conditions outlined above, there's a monotonic relationship between two variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;13.8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Monotonic Relationship Between Two Variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_9_0.png"&gt;&lt;/p&gt;
&lt;p&gt;Below is a monotonic relationship because as the x-values increase, the y-values decrease.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Another Monotonic Relationship Between Two Variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_11_0.png"&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of a non-monotonic relationship because as the x-values increase, the y-values first decrease and then later increase. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Non-Monotonic Relationship Between Two Variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_13_0.png"&gt;&lt;/p&gt;
&lt;h3&gt;Explanation of Coefficient Values&lt;/h3&gt;
&lt;p&gt;If the Pearson's rank correlation value &lt;span class="math"&gt;\(r_{s}\)&lt;/span&gt; is &lt;em&gt;positive&lt;/em&gt;, as values from one variable increase, values from the other variable increase.&lt;/p&gt;
&lt;p&gt;If the rank correlation value is &lt;em&gt;negative&lt;/em&gt;, as values from one variable decrease, the values from the other variable increase. &lt;/p&gt;
&lt;p&gt;The table below provides some examples of &lt;span class="math"&gt;\(r_{s}\)&lt;/span&gt; and explanations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Spearman's rank correlation&lt;/th&gt;
&lt;th&gt;Interpretation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;There's &lt;em&gt;no&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0.25&lt;/td&gt;
&lt;td&gt;There's a small &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0.75&lt;/td&gt;
&lt;td&gt;There's a large &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-1.0&lt;/td&gt;
&lt;td&gt;There's a perfect &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.25&lt;/td&gt;
&lt;td&gt;There's a small &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;td&gt;There's a large &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;There's a perfect &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Example: Diamonds Dataset - Carat and Price&lt;/h3&gt;
&lt;h4&gt;Get Diamonds Dataset&lt;/h4&gt;
&lt;p&gt;Import &lt;code&gt;diamonds&lt;/code&gt; dataset from Seaborn library and assign to DataFrame &lt;code&gt;df_diamonds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each row of &lt;code&gt;df_diamonds&lt;/code&gt; contains details about a specific diamond purchased. We'll just utilize the &lt;code&gt;price&lt;/code&gt; and &lt;code&gt;carat&lt;/code&gt; columns below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diamonds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview the first few rows of &lt;code&gt;df_diamonds&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;carat&lt;/th&gt;
      &lt;th&gt;cut&lt;/th&gt;
      &lt;th&gt;color&lt;/th&gt;
      &lt;th&gt;clarity&lt;/th&gt;
      &lt;th&gt;depth&lt;/th&gt;
      &lt;th&gt;table&lt;/th&gt;
      &lt;th&gt;price&lt;/th&gt;
      &lt;th&gt;x&lt;/th&gt;
      &lt;th&gt;y&lt;/th&gt;
      &lt;th&gt;z&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.23&lt;/td&gt;
      &lt;td&gt;Ideal&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;SI2&lt;/td&gt;
      &lt;td&gt;61.5&lt;/td&gt;
      &lt;td&gt;55.0&lt;/td&gt;
      &lt;td&gt;326&lt;/td&gt;
      &lt;td&gt;3.95&lt;/td&gt;
      &lt;td&gt;3.98&lt;/td&gt;
      &lt;td&gt;2.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.21&lt;/td&gt;
      &lt;td&gt;Premium&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;SI1&lt;/td&gt;
      &lt;td&gt;59.8&lt;/td&gt;
      &lt;td&gt;61.0&lt;/td&gt;
      &lt;td&gt;326&lt;/td&gt;
      &lt;td&gt;3.89&lt;/td&gt;
      &lt;td&gt;3.84&lt;/td&gt;
      &lt;td&gt;2.31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;0.23&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;VS1&lt;/td&gt;
      &lt;td&gt;56.9&lt;/td&gt;
      &lt;td&gt;65.0&lt;/td&gt;
      &lt;td&gt;327&lt;/td&gt;
      &lt;td&gt;4.05&lt;/td&gt;
      &lt;td&gt;4.07&lt;/td&gt;
      &lt;td&gt;2.31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;0.29&lt;/td&gt;
      &lt;td&gt;Premium&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;VS2&lt;/td&gt;
      &lt;td&gt;62.4&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
      &lt;td&gt;334&lt;/td&gt;
      &lt;td&gt;4.20&lt;/td&gt;
      &lt;td&gt;4.23&lt;/td&gt;
      &lt;td&gt;2.63&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;0.31&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;SI2&lt;/td&gt;
      &lt;td&gt;63.3&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
      &lt;td&gt;335&lt;/td&gt;
      &lt;td&gt;4.34&lt;/td&gt;
      &lt;td&gt;4.35&lt;/td&gt;
      &lt;td&gt;2.75&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Explanation of carats&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;carat&lt;/code&gt; is a unit of measurement in diamonds to characterize its mass. Typically, bigger/heavier diamonds are known to be more expensive.&lt;/p&gt;
&lt;p&gt;Here's a helpful image from &lt;a href='https://www.womangettingmarried.com/guide-diamond-carats-prices/'&gt;womengettingmaried.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image of different carat sizes rings with labels" src="images/caratguide-500x500.jpg"&gt;&lt;/p&gt;
&lt;h4&gt;View Distribution of Carats versus Diamond Prices&lt;/h4&gt;
&lt;p&gt;The plot below has &lt;code&gt;carats&lt;/code&gt; on the x-axis and &lt;code&gt;price&lt;/code&gt; on the y-axis. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;carats&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Carats versus Price of Diamonds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_27_0.png"&gt;&lt;/p&gt;
&lt;p&gt;At first glance, it seems there's a positive correlation between the two variables. Generally, as carats increase, price increases. However, this relationship doesn't like like an exact &lt;em&gt;linear&lt;/em&gt; correlation.&lt;/p&gt;
&lt;p&gt;Let's first examine the &lt;em&gt;linear&lt;/em&gt; relationship between the two variables by calculating the Pearson's correlation coefficient.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.92
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is a strong positive &lt;em&gt;linear&lt;/em&gt; relationship between the two variables. &lt;/p&gt;
&lt;p&gt;Next, let's examine the Spearman's rank correlation value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spearmanr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.96
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Spearman's rank correlation value of &lt;span class="math"&gt;\(0.96\)&lt;/span&gt; is higher than the Pearson's correlation value of &lt;span class="math"&gt;\(0.92\)&lt;/span&gt;. This high value of &lt;span class="math"&gt;\(0.96\)&lt;/span&gt; and also because it's greater than &lt;span class="math"&gt;\(0.92\)&lt;/span&gt; means that the relationship between the two variables can be characterized as something that's &lt;em&gt;not&lt;/em&gt; linear. This is evident in the visualization. For every unit increase in &lt;code&gt;carats&lt;/code&gt;, there's an increasingly &lt;em&gt;greater&lt;/em&gt; unit increase in the &lt;code&gt;price&lt;/code&gt;. The relationship between the two variables could be characterized closer to &lt;a href='https://en.wikipedia.org/wiki/Exponential_growth'&gt;exponential&lt;/a&gt; than linear. &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "1em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="correlation"></category><category term="scatter plot"></category><category term="python"></category><category term="pandas"></category></entry></feed>