<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dan Friedman's Data Science Knowledge Base</title><link href="https://dfrieds.com/" rel="alternate"></link><link href="https://dfrieds.com/feeds/all.atom.xml" rel="self"></link><id>https://dfrieds.com/</id><updated>2019-04-15T09:30:00-07:00</updated><entry><title>Pandas rank() Method: Equivalent to ROW_NUMBER(), RANK(), DENSE_RANK() and NTILE() SQL Window Functions</title><link href="https://dfrieds.com/data-analysis/rank-method-python-pandas" rel="alternate"></link><published>2019-04-15T09:30:00-07:00</published><updated>2019-04-15T09:30:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-15:/data-analysis/rank-method-python-pandas</id><summary type="html">&lt;p&gt;Utilize the rank() method for pandas series - equivalent to ROW_NUMBER(), RANK(), DENSE_RANK() and NTILE() SQL window functions&lt;/p&gt;</summary><content type="html">&lt;p&gt;In SQL, popular window functions include: &lt;code&gt;ROW_NUMBER()&lt;/code&gt;, &lt;code&gt;RANK()&lt;/code&gt;, and &lt;code&gt;DENSE_RANK()&lt;/code&gt;. These are helpful for creating a new column that's a rank of some other values in a column, perhaps partitioned by one or multiple groups. You can learn about these SQL window functions via &lt;a href='https://mode.com/resources/sql-tutorial/sql-window-functions/' target='_blank'&gt;Mode's SQL tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, using pandas in Python, the &lt;a href='https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.rank.html' target="_blank"&gt;&lt;code&gt;rank()&lt;/code&gt; method&lt;/a&gt; for a series provides similar utility to the SQL window functions listed above.&lt;/p&gt;
&lt;p&gt;In this tutorial, I'll cover the &lt;code&gt;rank()&lt;/code&gt; method with an example of real estate transactions data.&lt;/p&gt;
&lt;h3&gt;Setup Code&lt;/h3&gt;
&lt;h4&gt;Import Module&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Gradient Used to Highlight Table Outputs&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;light_palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lightgreen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 1: Count of New Sellers Per Day&lt;/h3&gt;
&lt;h4&gt;Create Real Estate Transaction Dataset&lt;/h4&gt;
&lt;p&gt;I'll create a small dataset of 8 real estate transactions that include a close date and seller name for each house sale.&lt;/p&gt;
&lt;p&gt;Take note that Julia sold 5 homes with some transactions on separate days. Lara also sold 2 homes on different days.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-07&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Emily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View entire &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2012-08-07&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Convert &lt;code&gt;close_date&lt;/code&gt; column to datetime type in Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Find Rank of Homes Sold for Each Seller by Close Date&lt;/h4&gt;
&lt;p&gt;I want to know the rank of each house sale &lt;em&gt;by person ordered by time&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Based on looking at the table above, Julia sold her first, second and third house on August 1st. On August 3rd, Julia sold her fourth house. &lt;/p&gt;
&lt;p&gt;For the &lt;code&gt;df&lt;/code&gt; dataframe, I want to create a new column that shows the numerical rank values for each person's home sales by day. To do this, I group by the &lt;code&gt;seller_name&lt;/code&gt; column, and apply the &lt;code&gt;rank()&lt;/code&gt; method to the &lt;code&gt;close_date&lt;/code&gt; colummn. I set the &lt;code&gt;rank()&lt;/code&gt; argument &lt;code&gt;methond='first'&lt;/code&gt; to rank the sales of houses per person, ordered by date, in the order they appear. The new column with rank values is called &lt;code&gt;rank_seller_by_close_date&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;method='first'&lt;/code&gt; for the &lt;code&gt;rank()&lt;/code&gt; method for pandas series is equivalent to the &lt;code&gt;ROW_NUMBER()&lt;/code&gt; window function in SQL.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below I output &lt;code&gt;df&lt;/code&gt; and highlight the &lt;code&gt;rank_seller_by_close_date&lt;/code&gt; with shades of green designated by numerical value. The higher the rank value, the darker the green highlighted background. &lt;code&gt;df&lt;/code&gt; is ordered by &lt;code&gt;close_date&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col2 {
            background-color:  #e9fce9;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col2 {
            background-color:  #e9fce9;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col2 {
            background-color:  #d3f8d3;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col2 {
            background-color:  #e9fce9;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col2 {
            background-color:  #bcf5bc;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col2 {
            background-color:  #d3f8d3;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col2 {
            background-color:  #a6f1a6;
        }    #T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col2 {
            background-color:  #90ee90;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;0&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col1" class="data row0 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;1&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow1_col2" class="data row1 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;2&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow2_col2" class="data row2 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;3&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col1" class="data row3 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow3_col2" class="data row3 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;4&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col1" class="data row4 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow4_col2" class="data row4 col2" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;6&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col1" class="data row6 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow6_col2" class="data row6 col2" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;7&lt;/th&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf37b36_5f9a_11e9_b74c_784f4368ca5frow7_col2" class="data row7 col2" &gt;5&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;It's difficult to easily see the order of ranks for each seller by date. Below, I output &lt;code&gt;df&lt;/code&gt; sorted by &lt;code&gt;seller_name&lt;/code&gt; and then &lt;code&gt;rank_seller_by_close_date&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Much better! It's clear Julia's home sales are ranked by from oldest to newest. Even though she made two homes sales on August 1st, one is given a rank value of &lt;code&gt;1&lt;/code&gt; and then next &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col2 {
            background-color:  #e9fce9;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col2 {
            background-color:  #e9fce9;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col2 {
            background-color:  #d3f8d3;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col2 {
            background-color:  #bcf5bc;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col2 {
            background-color:  #a6f1a6;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col2 {
            background-color:  #90ee90;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col2 {
            background-color:  #e9fce9;
        }    #T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col2 {
            background-color:  #d3f8d3;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;3&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col1" class="data row0 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;1&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow1_col2" class="data row1 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;2&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow2_col2" class="data row2 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;4&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow3_col2" class="data row3 col2" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;6&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col1" class="data row4 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow4_col2" class="data row4 col2" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;7&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col1" class="data row5 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow5_col2" class="data row5 col2" &gt;5&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;0&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col1" class="data row6 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;5&lt;/th&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col1" class="data row7 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bbf63f9c_5f9a_11e9_a976_784f4368ca5frow7_col2" class="data row7 col2" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;h4&gt;Find Count of New Sellers Per Seller Per Day&lt;/h4&gt;
&lt;p&gt;I can utilize the rankings above to find the count of new sellers by day. &lt;/p&gt;
&lt;p&gt;For example, Julia is a &lt;em&gt;new&lt;/em&gt; home seller on August 1st because she has a rank of &lt;code&gt;1&lt;/code&gt; that day. Julia would &lt;em&gt;not&lt;/em&gt; be counted as a &lt;em&gt;new&lt;/em&gt; home seller on August 3rd because she has a rank of &lt;code&gt;3&lt;/code&gt; that day. &lt;/p&gt;
&lt;p&gt;I can filter &lt;code&gt;df&lt;/code&gt; by record in which &lt;code&gt;rank_seller_by_close_date&lt;/code&gt; is equal to &lt;code&gt;1&lt;/code&gt;. The three records for Lara, Julia and Emily show the &lt;code&gt;close_date&lt;/code&gt; for each in which they sold their first home.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
      &lt;th&gt;rank_seller_by_close_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Let's take the table above and group by &lt;code&gt;close_date&lt;/code&gt; to find the count of &lt;code&gt;close_date&lt;/code&gt; observations. Below is the output.&lt;/p&gt;
&lt;p&gt;Similar to above, on &lt;code&gt;2012-08-01&lt;/code&gt;, we can see &lt;code&gt;2&lt;/code&gt; new sellers representing Lara and Julia. On &lt;code&gt;2012-08-02&lt;/code&gt;, we can see &lt;code&gt;1&lt;/code&gt; new seller representing Emily.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rank_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;count_new_sellers_of_homes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;count_new_sellers_of_homes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Example 2: Count of New Sellers By Agency Per Day&lt;/h3&gt;
&lt;p&gt;In example 1, I wanted the count of new sellers by day. In this example 2, I want the count of sellers by agency per day.&lt;/p&gt;
&lt;p&gt;Below, I add a new column called &lt;code&gt;agency&lt;/code&gt; that goes for each home sale.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HomeSales&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HomeSales&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fifer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below I print the output of &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
      &lt;th&gt;rank_seller_by_close_date&lt;/th&gt;
      &lt;th&gt;agency&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;2012-08-07&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;5.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I want to create the rank value of home sales by agency per seller ordered by close date. This is valuable so each agency can understand the count of new sellers per day. &lt;/p&gt;
&lt;p&gt;Below, I group by two fields, &lt;code&gt;agency&lt;/code&gt; and then &lt;code&gt;seller_name&lt;/code&gt; and find a rank value ordered by &lt;code&gt;close_date&lt;/code&gt;. I store these rank values in a new column called &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below I output &lt;code&gt;df&lt;/code&gt; and highlight the important column &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt;. The order of ranks below is a bit confusing. I'll re-order records after below's output.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col4 {
            background-color:  #cbf7cb;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col4 {
            background-color:  #e9fce9;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col4 {
            background-color:  #cbf7cb;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col4 {
            background-color:  #aef3ae;
        }    #T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col4 {
            background-color:  #90ee90;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col1" class="data row0 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col2" class="data row1 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow1_col4" class="data row1 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col2" class="data row2 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow2_col4" class="data row2 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col1" class="data row3 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col2" class="data row3 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col3" class="data row3 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow3_col4" class="data row3 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col1" class="data row4 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col2" class="data row4 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col3" class="data row4 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col1" class="data row6 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col2" class="data row6 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col3" class="data row6 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow6_col4" class="data row6 col4" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col2" class="data row7 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col3" class="data row7 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc001bf4_5f9a_11e9_a1fb_784f4368ca5frow7_col4" class="data row7 col4" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;The output below is easier to understand because I sort &lt;code&gt;df&lt;/code&gt; by &lt;code&gt;agency&lt;/code&gt; and then &lt;code&gt;seller_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Below, notice how &lt;code&gt;Fifer&lt;/code&gt; &lt;em&gt;first&lt;/em&gt; helped Julia sell a home on &lt;code&gt;2012-08-01&lt;/code&gt; and first helped Lara sell a home on &lt;code&gt;2012-08-01&lt;/code&gt;. Both of these rows have a &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt; value of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then, when Julia sold a home with &lt;code&gt;HomeSales&lt;/code&gt; on &lt;code&gt;2012-08-03&lt;/code&gt;, that also has a &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt; value of &lt;code&gt;1&lt;/code&gt; because that was her &lt;em&gt;first&lt;/em&gt; home sold by date with that agency, &lt;code&gt;HomeSales&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col4 {
            background-color:  #e9fce9;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col4 {
            background-color:  #cbf7cb;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col4 {
            background-color:  #aef3ae;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col4 {
            background-color:  #90ee90;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col4 {
            background-color:  #e9fce9;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col4 {
            background-color:  #cbf7cb;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col4 {
            background-color:  #e9fce9;
        }    #T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col4 {
            background-color:  #e9fce9;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col1" class="data row0 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col2" class="data row1 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow1_col4" class="data row1 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col2" class="data row2 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow2_col4" class="data row2 col4" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col2" class="data row3 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col3" class="data row3 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow3_col4" class="data row3 col4" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col1" class="data row4 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col2" class="data row4 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col3" class="data row4 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col1" class="data row6 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col3" class="data row6 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow6_col4" class="data row6 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col2" class="data row7 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col3" class="data row7 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc034d68_5f9a_11e9_b74b_784f4368ca5frow7_col4" class="data row7 col4" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;I still want the count of &lt;em&gt;new&lt;/em&gt; sellers with each agency per day. Below is a filter of &lt;code&gt;df&lt;/code&gt; for records in which &lt;code&gt;first_rank_agency_seller_by_close_date&lt;/code&gt; equals &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
      &lt;th&gt;rank_seller_by_close_date&lt;/th&gt;
      &lt;th&gt;agency&lt;/th&gt;
      &lt;th&gt;first_rank_agency_seller_by_close_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;To get the final final output a count of new sellers with each agency per day, I take the filtered dataframe from above, group by &lt;code&gt;agency&lt;/code&gt; and then &lt;code&gt;close_date&lt;/code&gt;, and then compute the group size. &lt;/p&gt;
&lt;p&gt;Above I see two records of homes sold on &lt;code&gt;2012-08-01&lt;/code&gt; by Lara and Julia with the agency &lt;code&gt;Fifer&lt;/code&gt;. In the output from the group by operation below, I see an equivalent first record for &lt;code&gt;Fifer&lt;/code&gt; on &lt;code&gt;2012-08-01&lt;/code&gt; with &lt;code&gt;count_new_sellers_of_homes&lt;/code&gt; equal to &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;count_new_sellers_of_homes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;agency&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;count_new_sellers_of_homes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Fifer&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;HomeSales&lt;/td&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Example 3: Pandas Rank &lt;code&gt;method='min'&lt;/code&gt; Comparison&lt;/h3&gt;
&lt;p&gt;The pandas &lt;code&gt;rank()&lt;/code&gt; method has an argument &lt;code&gt;method&lt;/code&gt; that can be set to &lt;code&gt;min&lt;/code&gt;. This is different than the method used above with &lt;code&gt;method&lt;/code&gt; set to &lt;code&gt;first&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;method='min'&lt;/code&gt; argument for the &lt;code&gt;rank()&lt;/code&gt; method for pandas series is equivalent to the &lt;code&gt;RANK()&lt;/code&gt; window function in SQL.&lt;/p&gt;
&lt;p&gt;Notice how with &lt;code&gt;method='min'&lt;/code&gt;, in the column &lt;code&gt;min_rank_agency_seller_by_close_date&lt;/code&gt;, Julia's two home sales on August 1, 2012 are both given a tied rank of 1. &lt;/p&gt;
&lt;p&gt;Then, the min rank value &lt;em&gt;skips&lt;/em&gt; a value of &lt;code&gt;2&lt;/code&gt; and Julia's next sale on August 5, 2012 has a value of &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;min_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;min_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col5 {
            background-color:  #aef3ae;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col5 {
            background-color:  #90ee90;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col5 {
            background-color:  #cbf7cb;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col5 {
            background-color:  #e9fce9;
        }    #T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col5 {
            background-color:  #e9fce9;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col5" &gt;min_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col1" class="data row0 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow0_col5" class="data row0 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col2" class="data row1 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col4" class="data row1 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow1_col5" class="data row1 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col2" class="data row2 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col4" class="data row2 col4" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow2_col5" class="data row2 col5" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col2" class="data row3 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col3" class="data row3 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col4" class="data row3 col4" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow3_col5" class="data row3 col5" &gt;4&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col1" class="data row4 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col2" class="data row4 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col3" class="data row4 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow4_col5" class="data row4 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow5_col5" class="data row5 col5" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col1" class="data row6 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col3" class="data row6 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col4" class="data row6 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow6_col5" class="data row6 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col2" class="data row7 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col3" class="data row7 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col4" class="data row7 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc0d943a_5f9a_11e9_be80_784f4368ca5frow7_col5" class="data row7 col5" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;The use case for &lt;code&gt;method='first'&lt;/code&gt; versus &lt;code&gt;method='min'&lt;/code&gt; varies on a case by case basis. It's important to understand your data well to make sure you utilize the correct one, though you can of course easily swap the argument's value.&lt;/p&gt;
&lt;h3&gt;Example 4: Pandas Rank &lt;code&gt;method='dense'&lt;/code&gt; Comparison&lt;/h3&gt;
&lt;p&gt;The pandas &lt;code&gt;rank()&lt;/code&gt; method has an argument &lt;code&gt;method&lt;/code&gt; that can be set to &lt;code&gt;'dense'&lt;/code&gt;. This is different than &lt;code&gt;method&lt;/code&gt; set to either &lt;code&gt;'first'&lt;/code&gt; or &lt;code&gt;'min'&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Notice how with &lt;code&gt;method='dense'&lt;/code&gt;, in the column &lt;code&gt;dense_rank_agency_seller_by_close_date&lt;/code&gt;, Julia's two home sales on August 1, 2012 are both given a tied rank of &lt;code&gt;1&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Then, the dense rank value &lt;em&gt;does not skip&lt;/em&gt; a value of &lt;code&gt;2&lt;/code&gt; and Julia's next sale on August 5, 2012 has a value of &lt;code&gt;2&lt;/code&gt;. &lt;code&gt;'dense'&lt;/code&gt; is different than &lt;code&gt;min&lt;/code&gt;! &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;agency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background_gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IndexSlice&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_rank_agency_seller_by_close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;style  type="text/css" &gt;
    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col6 {
            background-color:  #bcf5bc;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col6 {
            background-color:  #90ee90;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col6 {
            background-color:  #bcf5bc;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col6 {
            background-color:  #e9fce9;
        }    #T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col6 {
            background-color:  #e9fce9;
        }&lt;/style&gt;

&lt;p&gt;&lt;table id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5f" &gt; 
&lt;thead&gt;    &lt;tr&gt; 
        &lt;th class="blank level0" &gt;&lt;/th&gt; 
        &lt;th class="col_heading level0 col0" &gt;close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col1" &gt;seller_name&lt;/th&gt; 
        &lt;th class="col_heading level0 col2" &gt;rank_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col3" &gt;agency&lt;/th&gt; 
        &lt;th class="col_heading level0 col4" &gt;first_rank_agency_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col5" &gt;min_rank_agency_seller_by_close_date&lt;/th&gt; 
        &lt;th class="col_heading level0 col6" &gt;dense_rank_agency_seller_by_close_date&lt;/th&gt; 
    &lt;/tr&gt;&lt;/thead&gt; 
&lt;tbody&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row0" class="row_heading level0 row0" &gt;1&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col0" class="data row0 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col1" class="data row0 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col2" class="data row0 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col3" class="data row0 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col4" class="data row0 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col5" class="data row0 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow0_col6" class="data row0 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row1" class="row_heading level0 row1" &gt;2&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col0" class="data row1 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col1" class="data row1 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col2" class="data row1 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col3" class="data row1 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col4" class="data row1 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col5" class="data row1 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow1_col6" class="data row1 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row2" class="row_heading level0 row2" &gt;6&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col0" class="data row2 col0" &gt;2012-08-05 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col1" class="data row2 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col2" class="data row2 col2" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col3" class="data row2 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col4" class="data row2 col4" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col5" class="data row2 col5" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow2_col6" class="data row2 col6" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row3" class="row_heading level0 row3" &gt;7&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col0" class="data row3 col0" &gt;2012-08-07 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col1" class="data row3 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col2" class="data row3 col2" &gt;5&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col3" class="data row3 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col4" class="data row3 col4" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col5" class="data row3 col5" &gt;4&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow3_col6" class="data row3 col6" &gt;3&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row4" class="row_heading level0 row4" &gt;0&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col0" class="data row4 col0" &gt;2012-08-01 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col1" class="data row4 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col2" class="data row4 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col3" class="data row4 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col4" class="data row4 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col5" class="data row4 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow4_col6" class="data row4 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row5" class="row_heading level0 row5" &gt;5&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col0" class="data row5 col0" &gt;2012-08-04 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col1" class="data row5 col1" &gt;Lara&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col2" class="data row5 col2" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col3" class="data row5 col3" &gt;Fifer&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col4" class="data row5 col4" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col5" class="data row5 col5" &gt;2&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow5_col6" class="data row5 col6" &gt;2&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row6" class="row_heading level0 row6" &gt;3&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col0" class="data row6 col0" &gt;2012-08-02 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col1" class="data row6 col1" &gt;Emily&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col2" class="data row6 col2" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col3" class="data row6 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col4" class="data row6 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col5" class="data row6 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow6_col6" class="data row6 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;    &lt;tr&gt; 
        &lt;th id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5flevel0_row7" class="row_heading level0 row7" &gt;4&lt;/th&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col0" class="data row7 col0" &gt;2012-08-03 00:00:00&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col1" class="data row7 col1" &gt;Julia&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col2" class="data row7 col2" &gt;3&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col3" class="data row7 col3" &gt;HomeSales&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col4" class="data row7 col4" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col5" class="data row7 col5" &gt;1&lt;/td&gt; 
        &lt;td id="T_bc12cfb8_5f9a_11e9_87b4_784f4368ca5frow7_col6" class="data row7 col6" &gt;1&lt;/td&gt; 
    &lt;/tr&gt;&lt;/tbody&gt; 
&lt;/table&gt; &lt;/p&gt;
&lt;p&gt;The use case for &lt;code&gt;'dense'&lt;/code&gt; varies on a case by case basis. A second reminder - please understand your data well and why you'd choose &lt;code&gt;'dense'&lt;/code&gt; over other options.&lt;/p&gt;
&lt;h3&gt;Example 5: Pandas Rank &lt;code&gt;pct=True&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The pandas series &lt;code&gt;rank()&lt;/code&gt; method has another argument called &lt;code&gt;pct&lt;/code&gt; that can be set to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. By default, it's &lt;code&gt;False&lt;/code&gt;. This &lt;code&gt;pct&lt;/code&gt; argument computes the percentage rank of data.&lt;/p&gt;
&lt;p&gt;To set the argument &lt;code&gt;pct=True&lt;/code&gt; is similar to the &lt;code&gt;NTILE(100)&lt;/code&gt; window function in SQL.&lt;/p&gt;
&lt;h4&gt;Create Class Quiz Score Data&lt;/h4&gt;
&lt;p&gt;Below I create fictional data for 11 students in a class that took the same quiz. The max possible score is &lt;code&gt;100&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I remember in school, teachers told me I was in a certain percentile based on my GPA or score on a quiz. Therefore, I created a dataset I'll remember in relation to percentile rankings!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;class_quiz_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jamie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Joe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jake&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;James&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Joy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jared&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jaime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jay&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                   &lt;span class="s1"&gt;&amp;#39;score&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_quiz_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_quiz_scores&lt;/code&gt; as a dataframe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;James&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Dan&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Joy&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Jared&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Jaime&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Jay&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find the Percent Rank of Each Score in the Class&lt;/h4&gt;
&lt;p&gt;Below I create a new column called &lt;code&gt;score_percent_rank&lt;/code&gt; that's a ranking of scores in the &lt;code&gt;score&lt;/code&gt; column.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score_percent_rank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_quiz_scores&lt;/code&gt; as a dataframe below. Notice how a high quiz score by Dan of &lt;code&gt;91&lt;/code&gt; has a rank value of &lt;code&gt;0.81&lt;/code&gt;. I think of this as the 81st percentile. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;score_percent_rank&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;0.272727&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;0.181818&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;James&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
      &lt;td&gt;0.909091&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Dan&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Joy&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Jared&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
      &lt;td&gt;0.090909&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Jaime&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;0.363636&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Jay&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;To make this rank easier to understand, I will multiply all these values by &lt;span class="math"&gt;\(100\)&lt;/span&gt; and round to the nearest integer value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score_percentile_rank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;score_percent_rank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View &lt;code&gt;df_quiz_scores&lt;/code&gt; as a dataframe below. Now, Dan's &lt;code&gt;score&lt;/code&gt; of &lt;code&gt;91&lt;/code&gt; has a score &lt;code&gt;score_percentile_rank&lt;/code&gt; of &lt;code&gt;82&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_quiz_scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;score_percent_rank&lt;/th&gt;
      &lt;th&gt;score_percentile_rank&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;0.272727&lt;/td&gt;
      &lt;td&gt;27.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;50.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;0.181818&lt;/td&gt;
      &lt;td&gt;18.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;100.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;James&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
      &lt;td&gt;0.909091&lt;/td&gt;
      &lt;td&gt;91.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Dan&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
      &lt;td&gt;82.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Joy&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;64.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Jared&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
      &lt;td&gt;73.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Jill&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
      &lt;td&gt;0.090909&lt;/td&gt;
      &lt;td&gt;9.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Jaime&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;0.363636&lt;/td&gt;
      &lt;td&gt;36.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Jay&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;50.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "1em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="rank"></category><category term="pandas"></category><category term="python"></category></entry><entry><title>Rank Scores via Leetcode</title><link href="https://dfrieds.com/sql/rank-scores" rel="alternate"></link><published>2019-04-14T06:20:00-07:00</published><updated>2019-04-14T06:20:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-14:/sql/rank-scores</id><summary type="html">&lt;p&gt;Medium level Leetcode SQL problem and explanation of ranking scores using a window function&lt;/p&gt;</summary><content type="html">&lt;p&gt;In &lt;em&gt;extreme detail&lt;/em&gt;, in this tutorial I'll walk through a &lt;a href="https://leetcode.com/problems/rank-scores/description/" target="_blank"&gt;Leetcode medium level SQL problem&lt;/a&gt; to arrive to the solution.&lt;/p&gt;
&lt;h3&gt;Problem Statement via Leetcode&lt;/h3&gt;
&lt;p&gt;Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no "holes" between ranks.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3.50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3.65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;4.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;4.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.65&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For example, given the above Scores table, your query should generate the following report (order by highest score):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Score&lt;/th&gt;
&lt;th&gt;Rank&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4.00&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.00&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.85&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.65&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.65&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.50&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Dan's Step by Step Solution&lt;/h3&gt;
&lt;h4&gt;Use DENSE_RANK() to Get Ranking of Scores in Descending Order&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I create a new column using the &lt;code&gt;DENSE_RANK()&lt;/code&gt; method that is applied over all rows and &lt;code&gt;Score&lt;/code&gt; values and the rows are ordered by &lt;code&gt;Score&lt;/code&gt; from greatest to least.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;DENSE_RANK()&lt;/code&gt; method doesn't skip any rank numeric values. Any numeric values of the same size will get the same rank value. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Score&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;DENSE_RANK&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Score&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Rank&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Scores&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Score&lt;/th&gt;
&lt;th&gt;Rank&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4.00&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.00&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.85&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.65&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.65&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.50&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="window function"></category><category term="DENSE_RANK()"></category></entry><entry><title>Self Join</title><link href="https://dfrieds.com/data-analysis/self-join-python-pandas" rel="alternate"></link><published>2019-04-14T06:20:00-07:00</published><updated>2019-04-14T06:20:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-14:/data-analysis/self-join-python-pandas</id><summary type="html">&lt;p&gt;Self join a table in python and pandas&lt;/p&gt;</summary><content type="html">&lt;p&gt;In SQL, a popular type of join is a self join which joins a table to itself. This is helpful for comparing rows to one another, based on their values in columns, in a &lt;em&gt;single&lt;/em&gt; table. &lt;/p&gt;
&lt;p&gt;In this article, I'll walk through two examples in which self joins can be helpful.&lt;/p&gt;
&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 1: Basic Real Estate Transactions&lt;/h3&gt;
&lt;h4&gt;Create Dataset&lt;/h4&gt;
&lt;p&gt;I'll create a small dataset of 5 real estate transactions that include a unique transaction id for each purchase, a close date for each sale, the buyer's name and seller's name.&lt;/p&gt;
&lt;p&gt;Notice how Julia was the buyer for transaction id &lt;code&gt;1&lt;/code&gt; and later a seller for transaction id &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transaction_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="s1"&gt;&amp;#39;close_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2012-08-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
        &lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Joe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jake&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jamie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jackie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Barbara&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Emily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mason&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View entire &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;buyer_name&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;Barbara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jackie&lt;/td&gt;
      &lt;td&gt;Mason&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find People Who Were Both Buyers and Sellers&lt;/h4&gt;
&lt;p&gt;Often times, people buy homes and then later sell that homes. In this dataset, I'm curious, which people both bought and sold a home? We noticed earlier Julia bought a home and later sold one so Julia's name should be the only result.&lt;/p&gt;
&lt;p&gt;One method of finding a solution is to do a self join. In pandas, the DataFrame object has a &lt;code&gt;merge()&lt;/code&gt; method. Below, for &lt;code&gt;df&lt;/code&gt;, for the &lt;code&gt;merge&lt;/code&gt; method, I'll set the following arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;right=df&lt;/code&gt; so that the first &lt;code&gt;df&lt;/code&gt; listed in the statement merges with another DataFrame, &lt;code&gt;df&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;left_on='buyer_name'&lt;/code&gt; is the column to join from the left &lt;code&gt;df&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;right_on='seller_name&lt;/code&gt; is the column to join from the right &lt;code&gt;df&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, these arguments are also set in the &lt;code&gt;merge&lt;/code&gt; method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;how='inner'&lt;/code&gt; so returned results only show records in which the left &lt;code&gt;df&lt;/code&gt; has a value in &lt;code&gt;buyer_name&lt;/code&gt; equivalent to the right &lt;code&gt;df&lt;/code&gt; with a value of &lt;code&gt;seller_name&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;suffixes=(‘_x’, ‘_y’)&lt;/code&gt; so &lt;code&gt;_x&lt;/code&gt; is appended to the end of column names from our left &lt;code&gt;df&lt;/code&gt; if those column names originally match the right &lt;code&gt;df&lt;/code&gt;. &lt;code&gt;_y&lt;/code&gt; is appended to the end of column names from our right &lt;code&gt;df&lt;/code&gt; if those column names originally match the left &lt;code&gt;df&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id_x&lt;/th&gt;
      &lt;th&gt;close_date_x&lt;/th&gt;
      &lt;th&gt;buyer_name_x&lt;/th&gt;
      &lt;th&gt;seller_name_x&lt;/th&gt;
      &lt;th&gt;transaction_id_y&lt;/th&gt;
      &lt;th&gt;close_date_y&lt;/th&gt;
      &lt;th&gt;buyer_name_y&lt;/th&gt;
      &lt;th&gt;seller_name_y&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Our output of &lt;code&gt;df2&lt;/code&gt; shows in a single record, the details of Julia who bought a home and sold a home.&lt;/p&gt;
&lt;p&gt;We can find all unique values in the &lt;code&gt;buyer_name_x&lt;/code&gt; field to programmatically arrive at our result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;array([&amp;#39;Julia&amp;#39;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example 2: Intermediate Real Estate Transactions&lt;/h3&gt;
&lt;h4&gt;Append New Row to Dataset&lt;/h4&gt;
&lt;p&gt;Below, I create a new row for another real estate transaction in which Julia buys a 2nd home.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2012-08-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Julia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View new &lt;code&gt;df&lt;/code&gt; with additional row.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id&lt;/th&gt;
      &lt;th&gt;close_date&lt;/th&gt;
      &lt;th&gt;buyer_name&lt;/th&gt;
      &lt;th&gt;seller_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2012-08-03&lt;/td&gt;
      &lt;td&gt;Jake&lt;/td&gt;
      &lt;td&gt;Barbara&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jamie&lt;/td&gt;
      &lt;td&gt;Emily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2012-08-04&lt;/td&gt;
      &lt;td&gt;Jackie&lt;/td&gt;
      &lt;td&gt;Mason&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Mary&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Find People Who Are Both Buyers and Sellers&lt;/h4&gt;
&lt;p&gt;This is the same ask as with Example 1. However, our dataset is slightly different so a self join will return different results.&lt;/p&gt;
&lt;p&gt;I'll use the same code to perform a self join but assign the output to &lt;code&gt;df&lt;/code&gt; instead.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;seller_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;transaction_id_x&lt;/th&gt;
      &lt;th&gt;close_date_x&lt;/th&gt;
      &lt;th&gt;buyer_name_x&lt;/th&gt;
      &lt;th&gt;seller_name_x&lt;/th&gt;
      &lt;th&gt;transaction_id_y&lt;/th&gt;
      &lt;th&gt;close_date_y&lt;/th&gt;
      &lt;th&gt;buyer_name_y&lt;/th&gt;
      &lt;th&gt;seller_name_y&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2012-08-01&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Lara&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2012-08-05&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
      &lt;td&gt;Mary&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2012-08-02&lt;/td&gt;
      &lt;td&gt;Joe&lt;/td&gt;
      &lt;td&gt;Julia&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;There are &lt;em&gt;two&lt;/em&gt; records! &lt;/p&gt;
&lt;p&gt;The first record indicates Julia's purchase for &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; and later a sale with &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The second record indicates Julia's purchase for &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;6&lt;/code&gt; and later a sale with &lt;code&gt;transaction_id&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;This is the correct output as I wanted all rows of &lt;code&gt;df&lt;/code&gt; to be joined with &lt;code&gt;df&lt;/code&gt; in which a &lt;code&gt;buyer_name&lt;/code&gt; from the left &lt;code&gt;df&lt;/code&gt; is equivalent to a &lt;code&gt;seller_name&lt;/code&gt; from the right &lt;code&gt;df&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I can find all unique values of the &lt;code&gt;buyer_name_x&lt;/code&gt; field to programmatically arrive at our result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buyer_name_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;array([&amp;#39;Julia&amp;#39;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;</content><category term="self join"></category><category term="pandas merge"></category><category term="python"></category><category term="pandas"></category></entry><entry><title>Rising Temperature</title><link href="https://dfrieds.com/sql/rising-temperature" rel="alternate"></link><published>2019-04-09T09:00:00-07:00</published><updated>2019-04-09T09:00:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-09:/sql/rising-temperature</id><summary type="html">&lt;p&gt;SQL problem and step-by-step explanation of identifying days with higher temperature than previous day&lt;/p&gt;</summary><content type="html">&lt;p&gt;In &lt;em&gt;extreme detail&lt;/em&gt;, I'll walk through a solution to the problem below. It's based off this &lt;a href="https://leetcode.com/problems/rising-temperature/" target="_blank"&gt;Leetcode problem&lt;/a&gt; however I use a different example that's more similar to the "dirty" data you'll utilize on the job. &lt;/p&gt;
&lt;h3&gt;Problem Statement&lt;/h3&gt;
&lt;p&gt;Given a &lt;code&gt;weater&lt;/code&gt; table, write a SQL query to find all dates with higher temperature compared to its previous day.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;RecordDate&lt;/th&gt;
&lt;th&gt;Temperature&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2018-02-01&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2018-02-02&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2018-02-03&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2018-02-05&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2018-02-06&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You should return the following table.&lt;/p&gt;
&lt;p&gt;Id | RecordDate | Temperature | previous_day_temperature
--- | --- | ---
1 | 2018-02-01 | 33
2 | 2018-02-02 | 34
3 | 2018-02-03 | 22
4 | 2018-02-05 | 38
5 | 2018-02-06 | 39&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Self Join &lt;code&gt;Weather&lt;/code&gt; Table&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;Weather&lt;/code&gt; table, each row has a unique &lt;code&gt;Id&lt;/code&gt; value and should also be a unique day. &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;RecordDate&lt;/th&gt;
&lt;th&gt;Temperature&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2018-02-01&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2018-02-02&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2018-02-03&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2018-02-05&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2018-02-06&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note how the &lt;code&gt;RecordDate&lt;/code&gt; changes from &lt;code&gt;2018-02-02&lt;/code&gt; to &lt;code&gt;2018-02-04&lt;/code&gt;. In this table, we're unsure how the &lt;code&gt;Temperature&lt;/code&gt; on &lt;code&gt;2018-02-04&lt;/code&gt; compares to the previous day, the third, because there is no value of the previous days' temperature.&lt;/p&gt;
&lt;p&gt;In the final solution SQL query, I need two conditions:&lt;/p&gt;
&lt;p&gt;1) Previous day's date plus one day is equal to the current day's date
2) &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;SELF JOIN&lt;/code&gt; below joins the &lt;code&gt;weather&lt;/code&gt; table to itself on the &lt;code&gt;Id&lt;/code&gt; field. So, the result is &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temperature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;record_date&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;previous_day_temperature&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;record_date&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;previous_record_date&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;frieds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weather&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;RecordDate&lt;/th&gt;
&lt;th&gt;Temperature&lt;/th&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;RecordDate&lt;/th&gt;
&lt;th&gt;Temperature&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2015-01-01&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2015-01-01&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2015-01-02&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2015-01-02&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2015-01-03&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2015-01-03&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2015-01-04&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2015-01-04&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Id&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt;
&lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;DATEDIFF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordDate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RecordDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="window functions"></category><category term="subquery"></category><category term="LAG()"></category></entry><entry><title>Score Deviation from Mean</title><link href="https://dfrieds.com/sql/score-deviation-mean" rel="alternate"></link><published>2019-04-08T18:00:00-07:00</published><updated>2019-04-08T18:00:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-08:/sql/score-deviation-mean</id><summary type="html">&lt;p&gt;SQL problem to find the deviation of scores from their mean. Requires use of a window function.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Problem Statement&lt;/h3&gt;
&lt;p&gt;Compute the deviance of each person's ACT score from the average ACT score from all students in the table below called &lt;code&gt;student_ACT_scores&lt;/code&gt;. Return first_name, score and ACT_score_deviation_mean with deviance in descending order.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;ACT_score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jake&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maddie&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Luis&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Angela&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;We can use a window function to apply an aggregate function to all rows in a table. The code &lt;code&gt;AVG(ACT_score) OVER ()&lt;/code&gt; applies the average ACT score over the entire table. There is no re-ordering of rows or partioning of groups in the window function.&lt;/p&gt;
&lt;p&gt;Given that new average ACT score in a column, we can perform the subtraction operation in the &lt;code&gt;SELECT&lt;/code&gt; statement. Lastly, we order records from highest &lt;code&gt;CT_score_deviation_mean&lt;/code&gt; to smallest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;ACT_score&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACT_score&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;ACT_score_deviation_mean&lt;/span&gt;
       &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;student_ACT_scores&lt;/span&gt;
       &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;ACT_score_deviation_mean&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;ACT_score&lt;/th&gt;
&lt;th&gt;ACT_score_deviation_mean&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jake&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Angela&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Luis&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maddie&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;-3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="window function"></category><category term="AVG()"></category><category term="ORDER BY"></category></entry><entry><title>Find Three Consecutive Numbers via Leetcode</title><link href="https://dfrieds.com/sql/three-consec-numbers" rel="alternate"></link><published>2019-04-07T10:01:00-07:00</published><updated>2019-04-07T10:01:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-07:/sql/three-consec-numbers</id><summary type="html">&lt;p&gt;Medium level Leetcode SQL problem and step-by-step explanation of identifying a unique number that is repeated three times consecutively in a table through using window functions&lt;/p&gt;</summary><content type="html">&lt;p&gt;In &lt;em&gt;extreme detail&lt;/em&gt;, in this tutorial I'll walk through a &lt;a href="https://leetcode.com/problems/consecutive-numbers" target="_blank"&gt;Leetcode medium level SQL problem&lt;/a&gt; to arrive to the solution.&lt;/p&gt;
&lt;h3&gt;Problem Statement&lt;/h3&gt;
&lt;p&gt;Write a SQL query to find all numbers that appear at least three times consecutively.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Num&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For example, given the above &lt;code&gt;Logs&lt;/code&gt; table, &lt;code&gt;1&lt;/code&gt; is the only number that appears consecutively for at least three times.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ConsecutiveNums&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Dan's Step by Step Solution&lt;/h3&gt;
&lt;h4&gt;Create New Columns for Lag and Lead Numbers From &lt;code&gt;Num&lt;/code&gt; Column&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given the &lt;code&gt;Logs&lt;/code&gt; table above, I'm curious for each record, what's the following row number and previous row number. If I return an output in which the original number in the row, following row number and previous row number are all the same, then I know that number appears consecutively &lt;em&gt;at least&lt;/em&gt; three times.&lt;/p&gt;
&lt;p&gt;We can use window functions to compare previous and following rows in a table.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;LEAD()&lt;/code&gt; function creates a new column of the following row's &lt;code&gt;Num&lt;/code&gt; from the original table - exactly how it's ordered with &lt;code&gt;Id&lt;/code&gt; values in descending order. We alias this column as &lt;code&gt;following row number&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;LAG()&lt;/code&gt; function creates a new column of the following row's &lt;code&gt;Num&lt;/code&gt; from the original table - exactly how it's ordered with &lt;code&gt;Id&lt;/code&gt; values in descending order. We alias this column as &lt;code&gt;previous row number&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Learn more about &lt;code&gt;LEAD()&lt;/code&gt; and &lt;code&gt;LAG()&lt;/code&gt; functions in &lt;a href='https://mode.com/resources/sql-tutorial/sql-window-functions/' target='_blank'&gt;Mode's great tutorial on window functions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LEAD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;previous row number&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Logs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;number&lt;/th&gt;
&lt;th&gt;following row number&lt;/th&gt;
&lt;th&gt;previous row number&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Return Rows with Same Number in All Three Columns&lt;/h4&gt;
&lt;p&gt;Given the output above, we can see one row in which &lt;code&gt;number&lt;/code&gt; is equal to &lt;code&gt;following row number&lt;/code&gt; which is equal to &lt;code&gt;previous row number&lt;/code&gt;. That number, &lt;code&gt;1&lt;/code&gt;, is the solution of a number that appears consecutively for at least three times.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given the previous query's output, we can use a subquery to just return one row in which &lt;code&gt;number&lt;/code&gt; is equal to &lt;code&gt;following row number&lt;/code&gt; which is equal to &lt;code&gt;previous row number&lt;/code&gt;. We filter our underlying table, &lt;code&gt;sub&lt;/code&gt;, with the &lt;code&gt;WHERE&lt;/code&gt; clauses in the last two lines of the query.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LEAD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;previous row number&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Logs&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;previous row number&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;number&lt;/th&gt;
&lt;th&gt;following row number&lt;/th&gt;
&lt;th&gt;previous row number&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Return Distinct &lt;code&gt;number&lt;/code&gt; From Previous Query&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given our output above, we want to filter this output to just return the distinct values that appear in the &lt;code&gt;number&lt;/code&gt; column which should just be 1 for this example.&lt;/p&gt;
&lt;p&gt;Use the &lt;a href='https://mode.com/resources/sql-tutorial/sql-distinct/' target="_blank"&gt;&lt;code&gt;DISTINCT&lt;/code&gt; statement&lt;/a&gt; to select only distinct values in the &lt;code&gt;number&lt;/code&gt; column in our &lt;code&gt;sub&lt;/code&gt; table and alias this column as &lt;code&gt;ConsecutiveNums&lt;/code&gt; to match Leetcode's desired solution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;ConsecutiveNums&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Num&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LEAD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;LAG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;previous row number&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Logs&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;number&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;following row number&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;previous row number&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ConsecutiveNums&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="window function"></category><category term="LAG() function"></category><category term="LEAD() function"></category><category term="WHERE clause"></category><category term="subquery"></category></entry><entry><title>Department Top Three Salaries via Leetcode</title><link href="https://dfrieds.com/sql/dept-top-salaries" rel="alternate"></link><published>2019-04-07T10:00:00-07:00</published><updated>2019-04-07T10:00:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-04-07:/sql/dept-top-salaries</id><summary type="html">&lt;p&gt;Advanced Leetcode SQL problem and step-by-step explanation of identifying top employees in departments by salary through using window functions&lt;/p&gt;</summary><content type="html">&lt;p&gt;In &lt;em&gt;extreme detail&lt;/em&gt;, in this tutorial I'll walk through a &lt;a href="https://leetcode.com/problems/department-top-three-salaries/" target="_blank"&gt;Leetcode Advanced SQL problem&lt;/a&gt; to arrive to the solution.&lt;/p&gt;
&lt;h3&gt;Problem Statement&lt;/h3&gt;
&lt;p&gt;The Employee table holds all employees. Every employee has an Id, and there is also a column for the department Id.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Salary&lt;/th&gt;
&lt;th&gt;DepartmentId&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Joe&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Henry&lt;/td&gt;
&lt;td&gt;80000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Sam&lt;/td&gt;
&lt;td&gt;60000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;90000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Janet&lt;/td&gt;
&lt;td&gt;69000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Randy&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Will&lt;/td&gt;
&lt;td&gt;70000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The Department table holds all departments of the company.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Id&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Write a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows (order of rows does not matter).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Department&lt;/th&gt;
&lt;th&gt;Employee&lt;/th&gt;
&lt;th&gt;Salary&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;90000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Randy&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Joe&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Will&lt;/td&gt;
&lt;td&gt;70000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Henry&lt;/td&gt;
&lt;td&gt;80000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Sam&lt;/td&gt;
&lt;td&gt;60000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Explanation&lt;/h3&gt;
&lt;p&gt;In IT department, Max earns the highest salary, both Randy and Joe earn the second highest salary, and Will earns the third highest salary. There are only two employees in the Sales department, Henry earns the highest salary while Sam earns the second highest salary.&lt;/p&gt;
&lt;h3&gt;Dan's Step by Step Solution&lt;/h3&gt;
&lt;h4&gt;Join Tables to Get Relevant Columns&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We are provided two tables: &lt;code&gt;Employee&lt;/code&gt; and &lt;code&gt;Department&lt;/code&gt;. In our final result, we need three fields: the department name, the employee's name and the employee's salary. Since these three columns are in two different tables, we need to join the two tables.&lt;/p&gt;
&lt;p&gt;We know this is a relational database in that the two tables "relate" to one another with common identifiers from each.&lt;/p&gt;
&lt;p&gt;The term “relational database” refers to the fact that the tables within it “relate” to one another—they contain common identifiers that allow information from multiple tables to be combined easily.&lt;/p&gt;
&lt;p&gt;The column &lt;code&gt;Id&lt;/code&gt; in the &lt;code&gt;Department&lt;/code&gt; table is a primary key. This key uniquely identifies each department in the company. We cannot have two &lt;code&gt;Id&lt;/code&gt; values that are the exact same number in this table!&lt;/p&gt;
&lt;p&gt;Similarly, the &lt;code&gt;Employee&lt;/code&gt; table has a foreign key of &lt;code&gt;DepartmentId&lt;/code&gt; that "relates" to the &lt;code&gt;Id&lt;/code&gt; field in the &lt;code&gt;Department&lt;/code&gt; table. Therefore, we can join the two tables together and retrieve the necessary columns to solve this problem.&lt;/p&gt;
&lt;p&gt;We choose a &lt;code&gt;INNER JOIN&lt;/code&gt; because we want to return all records from the &lt;code&gt;Employee&lt;/code&gt; table in which there is a corresponding match for the department name that the employee works in via the &lt;code&gt;Department&lt;/code&gt; table.&lt;/p&gt;
&lt;p&gt;To succinctly write out the elements of the SQL query below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select the &lt;code&gt;Name&lt;/code&gt; column from the &lt;code&gt;Department&lt;/code&gt; table and alias it as &lt;code&gt;"Department"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;name&lt;/code&gt; column from the &lt;code&gt;Employee&lt;/code&gt; table and alias it as &lt;code&gt;"Employee"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;Salary&lt;/code&gt; column from the &lt;code&gt;Salary&lt;/code&gt; table and alias it as &lt;code&gt;"Salary"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the columns from the &lt;code&gt;Employee&lt;/code&gt; table&lt;/li&gt;
&lt;li&gt;Inner join the &lt;code&gt;Department&lt;/code&gt; table on records in which the &lt;code&gt;Id&lt;/code&gt; field from the &lt;code&gt;Department&lt;/code&gt; table is equal to the &lt;code&gt;DepartmentId&lt;/code&gt; field from the &lt;code&gt;Employee&lt;/code&gt; table&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Department&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Employee&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Salary&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Salary&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DepartmentId&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Department&lt;/th&gt;
&lt;th&gt;Employee&lt;/th&gt;
&lt;th&gt;Salary&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Will&lt;/td&gt;
&lt;td&gt;70000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Randy&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Janet&lt;/td&gt;
&lt;td&gt;69000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;90000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Joe&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Sam&lt;/td&gt;
&lt;td&gt;60000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Henry&lt;/td&gt;
&lt;td&gt;80000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Create a New Column for Salary Rank In Descending Order of Employees by Department&lt;/h4&gt;
&lt;p&gt;The output above provides all relevant columns needed for the final solution. However, we need to rank employee salaries in descending order by their apartment. To do this, we'll use a window function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Compared to the query above, there is just one new statement that starts with &lt;code&gt;DENSE_RANK()&lt;/code&gt; and is a window function. You can learn more about window functions in detail from Mode's great &lt;a href='https://mode.com/resources/sql-tutorial/sql-window-functions/' target="_blank"&gt;tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the window function statement, there's 3 major elements. &lt;/p&gt;
&lt;p&gt;We use the function &lt;code&gt;DENSE_RANK()&lt;/code&gt; to provide a numerical ranking value based on the following conditions. We don't want to skip any numerical rank values so we use &lt;code&gt;DENSE_RANK()&lt;/code&gt; instead of &lt;code&gt;RANK()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We want a rank of salaries by department; therefore, the window will consider the group &lt;code&gt;Department.Id&lt;/code&gt;. So salaries can be ranked from greatest to least, starting at &lt;code&gt;1&lt;/code&gt;, in the &lt;code&gt;IT&lt;/code&gt; department and separately from greatest to least, starting at &lt;code&gt;1&lt;/code&gt;, in the &lt;code&gt;Sales&lt;/code&gt; department.&lt;/p&gt;
&lt;p&gt;We want the the &lt;code&gt;DENSE_RANK&lt;/code&gt; function applied to rank the salaries from greatest to least. &lt;code&gt;ORDER BY Employee.Salary DESC&lt;/code&gt; helps sort the salaries of employees from greatest to least - called descending order in SQL.&lt;/p&gt;
&lt;p&gt;To succinctly write out the elements of the SQL query below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select the &lt;code&gt;Name&lt;/code&gt; column from the &lt;code&gt;Department&lt;/code&gt; table and alias it as &lt;code&gt;"Department"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;name&lt;/code&gt; column from the &lt;code&gt;Employee&lt;/code&gt; table and alias it as &lt;code&gt;"Employee"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;Salary&lt;/code&gt; column from the &lt;code&gt;Salary&lt;/code&gt; table and alias it as &lt;code&gt;"Salary"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create new column called &lt;code&gt;salary_rank&lt;/code&gt; that provides a numerical value of the rank of each person's salary from greatest salary to smallest salary for each department.&lt;/li&gt;
&lt;li&gt;Select the columns from the &lt;code&gt;Employee&lt;/code&gt; table&lt;/li&gt;
&lt;li&gt;Inner join the &lt;code&gt;Department&lt;/code&gt; table on records in which the &lt;code&gt;Id&lt;/code&gt; field from the &lt;code&gt;Department&lt;/code&gt; table is equal to the &lt;code&gt;DepartmentId&lt;/code&gt; field from the &lt;code&gt;Employee&lt;/code&gt; table&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Department&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Employee&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Salary&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Salary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;DENSE_RANK&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PARTITION&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Salary&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;salary_rank&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DepartmentId&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Department&lt;/th&gt;
&lt;th&gt;Employee&lt;/th&gt;
&lt;th&gt;Salary&lt;/th&gt;
&lt;th&gt;salary_rank&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;90000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Randy&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Joe&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Will&lt;/td&gt;
&lt;td&gt;70000&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Janet&lt;/td&gt;
&lt;td&gt;69000&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Henry&lt;/td&gt;
&lt;td&gt;80000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Sam&lt;/td&gt;
&lt;td&gt;60000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Return 3 Necessary Colums and Top 3 Ranked Salaries by Department&lt;/h4&gt;
&lt;p&gt;The above query isn't our final solution yet. We have an extra unecessary column to show in the final output, &lt;code&gt;salary_rank&lt;/code&gt;, and a &lt;code&gt;salary_rank&lt;/code&gt; value of &lt;code&gt;4&lt;/code&gt; for &lt;code&gt;Janet&lt;/code&gt;, who isn't a top three salary in the &lt;code&gt;IT&lt;/code&gt; department.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Explanation of SQL Query Below:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Subquery and where clause explanation...&lt;/p&gt;
&lt;p&gt;From the returned output above, we need to exclude the &lt;code&gt;salary_rank&lt;/code&gt; column and the record for &lt;code&gt;Janet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To exclude the &lt;code&gt;salary_rank&lt;/code&gt; colum, we'll use the subquery functionality in SQL. Learn more about subqueries via Mode's excellent &lt;a href='https://mode.com/resources/sql-tutorial/sql-subqueries/' target="_blank"&gt;article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the execution of the query below, first, the inner query (our query in the previous step) is executed and is the underlying table used for the subquery. &lt;/p&gt;
&lt;p&gt;With the subquery, we have the first three new lines at the top of our query to just select the columns we want in the final output. Notice we're selecting these columns from a new table called &lt;code&gt;sub&lt;/code&gt;. The underlying table (our query in the previous step) has an alias of &lt;code&gt;sub&lt;/code&gt; that's short for subquery. &lt;/p&gt;
&lt;p&gt;This would output a table with the same number of rows as the query in the previous step except it would &lt;em&gt;not&lt;/em&gt; include the &lt;code&gt;salary_column&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Initially, the question asked to return the people's records who are in the top three salaries of their department. We can use the &lt;code&gt;WHERE&lt;/code&gt; clause in the final line to only select records from the underlying table in which the &lt;code&gt;salary_rank&lt;/code&gt; value is less than or equal to &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL Query:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Department&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Employee&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Salary&amp;quot;&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Department&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Employee&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Salary&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Salary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;DENSE_RANK&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;OVER&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PARTITION&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Salary&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;salary_rank&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;
&lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DepartmentId&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salary_rank&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Returned Output:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Department&lt;/th&gt;
&lt;th&gt;Employee&lt;/th&gt;
&lt;th&gt;Salary&lt;/th&gt;
&lt;th&gt;salary_rank&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;90000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Randy&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Joe&lt;/td&gt;
&lt;td&gt;85000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT&lt;/td&gt;
&lt;td&gt;Will&lt;/td&gt;
&lt;td&gt;70000&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Henry&lt;/td&gt;
&lt;td&gt;80000&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sales&lt;/td&gt;
&lt;td&gt;Sam&lt;/td&gt;
&lt;td&gt;60000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We are done!!&lt;/p&gt;</content><category term="window function"></category><category term="DENSE_RANK()"></category><category term="WHERE clause"></category><category term="subquery"></category><category term="INNER JOIN"></category></entry><entry><title>Command Line Basic Minesweeper</title><link href="https://dfrieds.com/python/cl-minesweeper" rel="alternate"></link><published>2019-03-29T19:58:00-07:00</published><updated>2019-03-29T19:58:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-03-29:/python/cl-minesweeper</id><summary type="html">&lt;p&gt;Medium Python algorithm prototype of a basic version of Minesweeper as a command line game&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this implementation, the minefield grid is always 4x4 and there's just one mine on the field. &lt;/p&gt;
&lt;p&gt;Additional work could be done on this Minesweeper implementation to allow for more adjustable field sizes, additional mines on the field and automatic reveal of coordinates that don't contain any adjacent mines. &lt;/p&gt;
&lt;p&gt;For a more robust code solution, I'd recommend more modularity with functions and the use of object-oriented programming to easily allow for reuse of code with inheritance, extensability to various platforms and additional benefits.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(asctime)-16s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(levelname)-12s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(lineno)-6s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(funcName)-28s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(message)-8s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;datefmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%H:%M:%SS&amp;#39;&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play_minesweeper&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;minefield_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;minefield_columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;set random mine row and column index given minefield size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mine_row_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_rows&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mine_column_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_columns&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is at: ({0}, {1})&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_column_index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_ones_possible_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_length&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Finds all possible indices of 1s that surround mine&lt;/span&gt;
&lt;span class="sd"&gt;        Function only works under assumption that minefield is square (all sides equal)&lt;/span&gt;
&lt;span class="sd"&gt;        :param mine_index: index of the mine for its corresponding row or column&lt;/span&gt;
&lt;span class="sd"&gt;        :param minefield_length: count of squares along one edge of minefield&lt;/span&gt;
&lt;span class="sd"&gt;        :return: one_indices&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;one_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;minefield_length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is located in the bottom row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1s can only be in 2nd to bottom row and bottom row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;one_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;one_indices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is in the first aka top row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1s can only be in the top and 2nd to the top row of hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;one_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;one_indices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mine is located in one of the middle rows&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1s can be above, on same and below the row of the mine in hidden_minefield&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;one_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;one_indices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;one_indices&lt;/span&gt;

    &lt;span class="n"&gt;row_ones_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;row_ones_indices: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_ones_indices&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;column_ones_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_column_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;column_ones_indices: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_ones_indices&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create list with list items of potential row indices and column indices of 1s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_ones_indices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_ones_indices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;coordinate_indices_lists: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create empty list to store all possible coordinates of positions of 1s; not all coord. on field&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ones_coordinates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;find cartesian product of values in coordinate_indices_lists&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;append coordinate of 1 to ones_coordinates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ones_coordinates: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generate hidden_minefield variable as a list of lists&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hidden_minefield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create counter for all 1s and 0s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;loop over all values in hidden_minefield; fill in with appropriate values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;column_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

            &lt;span class="c1"&gt;# check if this value on the hidden_minefield is the value of the mine&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mine_row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mine_column_index&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# check if this value on the hidden_minefield is in the ones_coordinates list&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

            &lt;span class="c1"&gt;# the value is not the mine or adjacent to the mine&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;output hidden_minefield with each row on a newline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create the user interface minefield of all ? values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;empty_list&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;empty_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sleep so print messages appear after logging messages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Time for the user to play! Try to avoid the mines!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# only enough guesses for user to guess all 1s and 0s; otherwise, user guesses mine and game ends&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;guess_counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count_ones_and_zeros&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;In minefield, row values start at 1 and go to {0}.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;In minefield, column values start at 1 and go to {0}.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;This is the user_interface_minefield:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# prompt user to guess row and column&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_player_input&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;guess_row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Guess row: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;guess_column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Guess column: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt;

        &lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_player_input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_condition_guess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_edge_size&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You didn&amp;#39;t guess an integer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;guess_index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;guess_index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;minefield_edge_size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your guess integer is out of range of 1-4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bad_guess_status&lt;/span&gt;

        &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;check_condition_guess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;check_condition_guess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minefield_columns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;bad_guess_status&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please make a more appropriate guess&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your guessed coordinate: ({0}, {1})&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;# create new variables for offsets of 1 less than guesses because we use zero-based numbering in Python&lt;/span&gt;
        &lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;guess_row&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;guess_column&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

        &lt;span class="c1"&gt;# make reveal of board and notify user with text change&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You guessed a 1 so you&amp;#39;re nearby a mine.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You guessed far from a mine. You&amp;#39;re ok!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user_guess_row_offset&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_guess_column_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;

        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You guessed the mine! You lose!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Here&amp;#39;s what the minefield looks like:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;guess_counter&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You have made {0} guess&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_counter&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You have made {0} guesses&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guess_counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;play_minesweeper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;16&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;19&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;41&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;located&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;42&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;48&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;row_ones_indices&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;41&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;located&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;42&lt;/span&gt;     &lt;span class="n"&gt;find_ones_possible_indices&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mine&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;50&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;column_ones_indices&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;52&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;potential&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;indices&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;indices&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;54&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;56&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;possible&lt;/span&gt; &lt;span class="n"&gt;coordinates&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;58&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;cartesian&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;coordinate_indices_lists&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;62&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;ones_coordinates&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;64&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;lists&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;67&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;70&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;appropriate&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;88&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;hidden_minefield&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;newline&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;90&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;92&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;        &lt;span class="n"&gt;DEBUG&lt;/span&gt;        &lt;span class="mi"&gt;98&lt;/span&gt;     &lt;span class="n"&gt;play_minesweeper&lt;/span&gt;             &lt;span class="n"&gt;sleep&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt; &lt;span class="n"&gt;appear&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;


&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;play&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;Try&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;avoid&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mines&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;


&lt;span class="n"&gt;Guess&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Guess&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;guessed&lt;/span&gt; &lt;span class="n"&gt;coordinate&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;guessed&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;re nearby a mine.&lt;/span&gt;
&lt;span class="s1"&gt;You have made 1 guess&lt;/span&gt;

&lt;span class="s1"&gt;In minefield, row values start at 1 and go to 4.&lt;/span&gt;
&lt;span class="s1"&gt;In minefield, column values start at 1 and go to 4.&lt;/span&gt;

&lt;span class="s1"&gt;This is the user_interface_minefield:&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="s1"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&lt;/span&gt;


&lt;span class="s1"&gt;Guess row:  4&lt;/span&gt;
&lt;span class="s1"&gt;Guess column:  4&lt;/span&gt;


&lt;span class="s1"&gt;Your guessed coordinate: (4, 4)&lt;/span&gt;
&lt;span class="s1"&gt;You guessed far from a mine. You&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;guesses&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;minefield&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user_interface_minefield&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="functions"></category><category term="loops"></category><category term="lists"></category><category term="itertools"></category><category term="logger"></category><category term="command line"></category></entry><entry><title>Spearman's Correlation</title><link href="https://dfrieds.com/math/spearmans-correlation" rel="alternate"></link><published>2019-03-29T19:50:00-07:00</published><updated>2019-03-29T19:50:00-07:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-03-29:/math/spearmans-correlation</id><summary type="html">&lt;p&gt;Learn Spearman's correlation to measure the strength and direction of association between two numerical variables&lt;/p&gt;</summary><content type="html">&lt;p&gt;Spearman's correlation is a measure of rank correlation between two numerical variables. It's often denoted as &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; or &lt;span class="math"&gt;\(r_{s}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For example, a Spearman's correlation test can help better identify the relationship between carats in a diamond ring and its price. Does more carats equate to a higher price?&lt;/p&gt;
&lt;p&gt;The Spearman's rank correlation is a non-parametric test so there are no requirements of the distributions of the variables to be tested. &lt;/p&gt;
&lt;p&gt;On the other hand, in a Pearson's correlation test, there is assumed to be a &lt;em&gt;linear&lt;/em&gt; relationship between two variables. However, the Spearman's rank correlation test can identify non-linear relationships between two variables.&lt;/p&gt;
&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;talk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;darkgrid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Data Requirements&lt;/h3&gt;
&lt;p&gt;The assumption for the Spearman's rank correlation test is that there is a monotonic relationship between the two variables being tested. A &lt;strong&gt;monotonic relationship&lt;/strong&gt; exists when one of two following situations exists:&lt;/p&gt;
&lt;p&gt;1) As one variable increases, the other variable increases.&lt;/p&gt;
&lt;p&gt;2) As one variable increases, the other variable decreases.&lt;/p&gt;
&lt;p&gt;Spearman's correlation determines the &lt;em&gt;strength&lt;/em&gt; (how large or small) and &lt;em&gt;direction&lt;/em&gt; (positive or negative) of the monotonic relationship between two variables.&lt;/p&gt;
&lt;h3&gt;Visual Examples of Monotonic and Non-Monotonic Relationships&lt;/h3&gt;
&lt;p&gt;Below, as the x-values increase, the y-values almost always increase too so there is a monotonic relationship.&lt;/p&gt;
&lt;p&gt;Note there is an observation in which the x-value at &lt;span class="math"&gt;\(-1\)&lt;/span&gt; has a smaller y-value of &lt;span class="math"&gt;\(-1\)&lt;/span&gt; than the previous x-value of &lt;span class="math"&gt;\(-2\)&lt;/span&gt;. So there is not a &lt;em&gt;perfect&lt;/em&gt; positive monotonic relationship. Generally, as long as the far majority of observations follow one of the two conditions outlined above, there's a monotonic relationship between two variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;13.8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Monotonic Relationship Between Two Variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_9_0.png"&gt;&lt;/p&gt;
&lt;p&gt;Below is a monotonic relationship because as the x-values increase, the y-values decrease.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Another Monotonic Relationship Between Two Variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_11_0.png"&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of a non-monotonic relationship because as the x-values increase, the y-values first decrease and then later increase. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Non-Monotonic Relationship Between Two Variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_13_0.png"&gt;&lt;/p&gt;
&lt;h3&gt;Explanation of Coefficient Values&lt;/h3&gt;
&lt;p&gt;If the Pearson's rank correlation value &lt;span class="math"&gt;\(r_{s}\)&lt;/span&gt; is &lt;em&gt;positive&lt;/em&gt;, as values from one variable increase, values from the other variable increase.&lt;/p&gt;
&lt;p&gt;If the rank correlation value is &lt;em&gt;negative&lt;/em&gt;, as values from one variable decrease, the values from the other variable increase. &lt;/p&gt;
&lt;p&gt;The table below provides some examples of &lt;span class="math"&gt;\(r_{s}\)&lt;/span&gt; and explanations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Spearman's rank correlation&lt;/th&gt;
&lt;th&gt;Interpretation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;There's &lt;em&gt;no&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0.25&lt;/td&gt;
&lt;td&gt;There's a small &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0.75&lt;/td&gt;
&lt;td&gt;There's a large &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-1.0&lt;/td&gt;
&lt;td&gt;There's a perfect &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.25&lt;/td&gt;
&lt;td&gt;There's a small &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;td&gt;There's a large &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;There's a perfect &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Example: Diamonds Dataset - Carat and Price&lt;/h3&gt;
&lt;h4&gt;Get Diamonds Dataset&lt;/h4&gt;
&lt;p&gt;Import &lt;code&gt;diamonds&lt;/code&gt; dataset from Seaborn library and assign to DataFrame &lt;code&gt;df_diamonds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each row of &lt;code&gt;df_diamonds&lt;/code&gt; contains details about a specific diamond purchased. We'll just utilize the &lt;code&gt;price&lt;/code&gt; and &lt;code&gt;carat&lt;/code&gt; columns below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diamonds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview the first few rows of &lt;code&gt;df_diamonds&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;carat&lt;/th&gt;
      &lt;th&gt;cut&lt;/th&gt;
      &lt;th&gt;color&lt;/th&gt;
      &lt;th&gt;clarity&lt;/th&gt;
      &lt;th&gt;depth&lt;/th&gt;
      &lt;th&gt;table&lt;/th&gt;
      &lt;th&gt;price&lt;/th&gt;
      &lt;th&gt;x&lt;/th&gt;
      &lt;th&gt;y&lt;/th&gt;
      &lt;th&gt;z&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.23&lt;/td&gt;
      &lt;td&gt;Ideal&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;SI2&lt;/td&gt;
      &lt;td&gt;61.5&lt;/td&gt;
      &lt;td&gt;55.0&lt;/td&gt;
      &lt;td&gt;326&lt;/td&gt;
      &lt;td&gt;3.95&lt;/td&gt;
      &lt;td&gt;3.98&lt;/td&gt;
      &lt;td&gt;2.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.21&lt;/td&gt;
      &lt;td&gt;Premium&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;SI1&lt;/td&gt;
      &lt;td&gt;59.8&lt;/td&gt;
      &lt;td&gt;61.0&lt;/td&gt;
      &lt;td&gt;326&lt;/td&gt;
      &lt;td&gt;3.89&lt;/td&gt;
      &lt;td&gt;3.84&lt;/td&gt;
      &lt;td&gt;2.31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;0.23&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;VS1&lt;/td&gt;
      &lt;td&gt;56.9&lt;/td&gt;
      &lt;td&gt;65.0&lt;/td&gt;
      &lt;td&gt;327&lt;/td&gt;
      &lt;td&gt;4.05&lt;/td&gt;
      &lt;td&gt;4.07&lt;/td&gt;
      &lt;td&gt;2.31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;0.29&lt;/td&gt;
      &lt;td&gt;Premium&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;VS2&lt;/td&gt;
      &lt;td&gt;62.4&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
      &lt;td&gt;334&lt;/td&gt;
      &lt;td&gt;4.20&lt;/td&gt;
      &lt;td&gt;4.23&lt;/td&gt;
      &lt;td&gt;2.63&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;0.31&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;SI2&lt;/td&gt;
      &lt;td&gt;63.3&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
      &lt;td&gt;335&lt;/td&gt;
      &lt;td&gt;4.34&lt;/td&gt;
      &lt;td&gt;4.35&lt;/td&gt;
      &lt;td&gt;2.75&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Explanation of carats&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;carat&lt;/code&gt; is a unit of measurement in diamonds to characterize its mass. Typically, bigger/heavier diamonds are known to be more expensive.&lt;/p&gt;
&lt;p&gt;Here's a helpful image from &lt;a href='https://www.womangettingmarried.com/guide-diamond-carats-prices/'&gt;womengettingmaried.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image of different carat sizes rings with labels" src="images/caratguide-500x500.jpg"&gt;&lt;/p&gt;
&lt;h4&gt;View Distribution of Carats versus Diamond Prices&lt;/h4&gt;
&lt;p&gt;The plot below has &lt;code&gt;carats&lt;/code&gt; on the x-axis and &lt;code&gt;price&lt;/code&gt; on the y-axis. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;carats&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Carats versus Price of Diamonds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="spearman_correlations_files/spearman_correlations_27_0.png"&gt;&lt;/p&gt;
&lt;p&gt;At first glance, it seems there's a positive correlation between the two variables. Generally, as carats increase, price increases. However, this relationship doesn't like like an exact &lt;em&gt;linear&lt;/em&gt; correlation.&lt;/p&gt;
&lt;p&gt;Let's first examine the &lt;em&gt;linear&lt;/em&gt; relationship between the two variables by calculating the Pearson's correlation coefficient.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.92
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is a strong positive &lt;em&gt;linear&lt;/em&gt; relationship between the two variables. &lt;/p&gt;
&lt;p&gt;Next, let's examine the Spearman's rank correlation value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spearmanr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.96
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Spearman's rank correlation value of &lt;span class="math"&gt;\(0.96\)&lt;/span&gt; is higher than the Pearson's correlation value of &lt;span class="math"&gt;\(0.92\)&lt;/span&gt;. This high value of &lt;span class="math"&gt;\(0.96\)&lt;/span&gt; and also because it's greater than &lt;span class="math"&gt;\(0.92\)&lt;/span&gt; means that the relationship between the two variables can be characterized as something that's &lt;em&gt;not&lt;/em&gt; linear. This is evident in the visualization. For every unit increase in &lt;code&gt;carats&lt;/code&gt;, there's an increasingly &lt;em&gt;greater&lt;/em&gt; unit increase in the &lt;code&gt;price&lt;/code&gt;. The relationship between the two variables could be characterized closer to &lt;a href='https://en.wikipedia.org/wiki/Exponential_growth'&gt;exponential&lt;/a&gt; than linear. &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "1em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="correlation"></category><category term="scatter plot"></category><category term="python"></category><category term="pandas"></category></entry><entry><title>Pearson's Correlation</title><link href="https://dfrieds.com/math/pearsons-correlation-coefficient" rel="alternate"></link><published>2019-03-05T20:20:00-08:00</published><updated>2019-03-05T20:20:00-08:00</updated><author><name>Dan Friedman</name></author><id>tag:dfrieds.com,2019-03-05:/math/pearsons-correlation-coefficient</id><summary type="html">&lt;p&gt;Learn Pearson's correlation to understand the linear relationship between two continuous numerical variables&lt;/p&gt;</summary><content type="html">&lt;p&gt;In statistics, the &lt;a href='https://en.wikipedia.org/wiki/Pearson_correlation_coefficient'&gt;&lt;strong&gt;Pearson correlation coefficient&lt;/strong&gt;&lt;/a&gt; is a measure of the &lt;em&gt;linear&lt;/em&gt; relationship between two continuous numerical variables of data. &lt;/p&gt;
&lt;p&gt;In business context, the term &lt;em&gt;correlation&lt;/em&gt; is used to to describe a relationship between two or more variables. However, this article will just cover the Pearson's correlation coefficient. This tutorial will illustrate the concept through simple examples and many visualizations.&lt;/p&gt;
&lt;h3&gt;Intro to Pearson Correlation Coefficient&lt;/h3&gt;
&lt;p&gt;The greek letter &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; stands for the &lt;strong&gt;Pearson's r&lt;/strong&gt;, otherwise known as the &lt;strong&gt;correlation coefficient&lt;/strong&gt; (&lt;span class="math"&gt;\(\rho\)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The equation for &lt;code&gt;r&lt;/code&gt; is below. The numerator is the covariance of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; - essentially how much they vary together. The denominator is the standard deviation of &lt;code&gt;x&lt;/code&gt; multipled by the standard deviation of &lt;code&gt;y&lt;/code&gt; which explains how the two variables vary apart from each other rather than with each other.&lt;/p&gt;
&lt;div class="math"&gt;$$r=\frac{cov(x, y)}{s_{x} \times s_{y}}$$&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\rho\)&lt;/span&gt; is a proportion. &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; measures the strength of a relationship by looking at how closely the observations fall along a straight line. If the data points resemble a perfectly straight line with a positive slope, then &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; is &lt;span class="math"&gt;\(1\)&lt;/span&gt;. If the data resembles a perfectly negatively sloped line, then then &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; is &lt;span class="math"&gt;\(-1\)&lt;/span&gt;. If the data points are randomly scattered with no resemblence of a perfect line, then &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; is close to &lt;span class="math"&gt;\(0\)&lt;/span&gt;. In this instace, there's no linear relationship between the two variables.&lt;/p&gt;
&lt;p&gt;Any &lt;span class="math"&gt;\(\rho\)&lt;/span&gt; value closer to the absolute value of &lt;span class="math"&gt;\(1\)&lt;/span&gt; indicates a &lt;em&gt;strong&lt;/em&gt; linear relationship between the two variables.&lt;/p&gt;
&lt;h3&gt;Import Modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;talk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;darkgrid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example to Illustrate Strength of Pearson's &lt;span class="math"&gt;\(\rho\)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Below are two visualizations, labeled &lt;em&gt;Graph 1&lt;/em&gt; and &lt;em&gt;Graph 2&lt;/em&gt;. Each shows a scatter plot of the relation of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values.&lt;/p&gt;
&lt;p&gt;I'm curious - which two variables have a stronger &lt;em&gt;positive&lt;/em&gt; linear relationship - &lt;em&gt;Graph 1&lt;/em&gt; or &lt;em&gt;Graph 2&lt;/em&gt;?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;5.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Graph 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="pearson_correlation_coefficient_files/pearson_correlation_coefficient_9_0.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dodgerblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y-values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Graph 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="pearson_correlation_coefficient_files/pearson_correlation_coefficient_10_0.png"&gt;&lt;/p&gt;
&lt;p&gt;The scatter points in &lt;em&gt;Graph 2&lt;/em&gt; seem to have a stronger positive linear relationship because the scatter points look to resemble a near-perfect line with a positive slope of &lt;span class="math"&gt;\(1\)&lt;/span&gt;. In fact, we can figure out the exact Pearson's r of each graph and &lt;em&gt;Graph 1&lt;/em&gt; indicates a larger value of &lt;span class="math"&gt;\(0.999\)&lt;/span&gt; while &lt;em&gt;Graph 2&lt;/em&gt; indicates &lt;span class="math"&gt;\(0.909\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;correlation_x_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;correlation_x_y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.9087195765173497
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;correlation_x_y2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p_value2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;correlation_x_y2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.9994608748837965
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Explanation of Coefficient Values&lt;/h3&gt;
&lt;p&gt;If the Pearson's r is &lt;em&gt;positive&lt;/em&gt;, as values from one variable increase, so does the other. &lt;/p&gt;
&lt;p&gt;If the coefficient is &lt;em&gt;negative&lt;/em&gt;, as values from one variable decrease, the values from the other variable increase. &lt;/p&gt;
&lt;p&gt;The table below provides some examples of coefficient values and explanations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pearson's correlation coefficient&lt;/th&gt;
&lt;th&gt;Interpretation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;There's &lt;em&gt;no&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0.25&lt;/td&gt;
&lt;td&gt;There's a small &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0.75&lt;/td&gt;
&lt;td&gt;There's a large &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-1.0&lt;/td&gt;
&lt;td&gt;There's a perfect &lt;em&gt;negative&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.25&lt;/td&gt;
&lt;td&gt;There's a small &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.75&lt;/td&gt;
&lt;td&gt;There's a large &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;There's a perfect &lt;em&gt;positive&lt;/em&gt; correlation between the two variables&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Assumption to Prove Correlation&lt;/h3&gt;
&lt;p&gt;Generally, for both variables compared, we want them to both be approximately normal. The reason for this is that it's unfair to interpret a correlation pattern if we're just looking at extremes of values. &lt;/p&gt;
&lt;p&gt;For example, let's say we want to understand the relationship between income and net worth. We'd initially &lt;em&gt;assume&lt;/em&gt; there's a positive linear relationship between the two variables: as income increases, net worth increases. However, hypothetically, let's say our dataset just had net income values around 0-20,00 U.S. dollars and 150,000-500,000 U.S. dollars. In this instance, our income values wouldn't represent a normal distribution. We're missing lots of income values between 20,000 and 150,000 U.S. dollars - which I think is a fairly common range for U.S. workers. &lt;/p&gt;
&lt;p&gt;We could still compare income and net worth and we'd likely see the people in that small income range have low net worth values while the people in that much higher net income range have larger net worth values. Yet, it's unfair to interpret correlation between these two variables since we're neglecting a huge portion of people with a certain income and it's biased to connect a relationship between &lt;em&gt;just&lt;/em&gt; the extremes of income data.&lt;/p&gt;
&lt;p&gt;Let's move onto some visual examples now to explain correlation.&lt;/p&gt;
&lt;h3&gt;Example 1: Tips Dataset - Total Bill and Tip&lt;/h3&gt;
&lt;h4&gt;Get the Data&lt;/h4&gt;
&lt;p&gt;Let's get the &lt;code&gt;tips&lt;/code&gt; dataset from the &lt;code&gt;seaborn&lt;/code&gt; library and assign it to the DataFrame &lt;code&gt;df_tips&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_tips&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tips&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each row represents a unique meal at a restaurant for a party of people; the dataset contains the following fields:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;column name&lt;/th&gt;
&lt;th&gt;column description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;total_bill&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;financial amount of meal in U.S. dollars&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;financial amount of the meal's tip in U.S. dollars&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;gender of server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;smoker&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean to represent if server smokes or not&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;day&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;day of week&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;meal name (Lunch or Dinner)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;count of people eating meal&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Preview the first 5 rows of &lt;code&gt;df_tips&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_tips&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;total_bill&lt;/th&gt;
      &lt;th&gt;tip&lt;/th&gt;
      &lt;th&gt;sex&lt;/th&gt;
      &lt;th&gt;smoker&lt;/th&gt;
      &lt;th&gt;day&lt;/th&gt;
      &lt;th&gt;time&lt;/th&gt;
      &lt;th&gt;size&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;16.99&lt;/td&gt;
      &lt;td&gt;1.01&lt;/td&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Sun&lt;/td&gt;
      &lt;td&gt;Dinner&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;10.34&lt;/td&gt;
      &lt;td&gt;1.66&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Sun&lt;/td&gt;
      &lt;td&gt;Dinner&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;21.01&lt;/td&gt;
      &lt;td&gt;3.50&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Sun&lt;/td&gt;
      &lt;td&gt;Dinner&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;23.68&lt;/td&gt;
      &lt;td&gt;3.31&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Sun&lt;/td&gt;
      &lt;td&gt;Dinner&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;24.59&lt;/td&gt;
      &lt;td&gt;3.61&lt;/td&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Sun&lt;/td&gt;
      &lt;td&gt;Dinner&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Plot the Relationship Between Total Bill and Tip Amounts&lt;/h4&gt;
&lt;p&gt;The plot below has total bill values on the x-axis and tips on the y-axis. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_tips&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_bill&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;darkgreen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;total bill [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tip [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Total Bill vs. Tips&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="pearson_correlation_coefficient_files/pearson_correlation_coefficient_26_0.png"&gt;&lt;/p&gt;
&lt;p&gt;There seems to be a large positive correlation between the two variables. As total bill sizes increase, tip values increase too. This is what we'd expect since tips given at restaurants are typically 20% of total bill size, so there's mutual dependence between these two variables.&lt;/p&gt;
&lt;h4&gt;Evaluate the Pearson's Correlation Coefficient Between Tips and Bill Amounts&lt;/h4&gt;
&lt;p&gt;We can use the &lt;code&gt;scipy&lt;/code&gt; packages's &lt;code&gt;stats&lt;/code&gt; module and &lt;a href='https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.stats.pearsonr.html'&gt;&lt;code&gt;pearsonr()&lt;/code&gt; method&lt;/a&gt; to compute the Pearson correlation coefficient.&lt;/p&gt;
&lt;p&gt;This method returns a list in which the first value is the correlation coefficient. &lt;/p&gt;
&lt;p&gt;Our returned value is 0.68 which confirms our belief that there's a large positive correlation between the two variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_tips&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_tips&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_bill&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.68
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can also the use DataFrame method &lt;a href='https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.corr.html'&gt;&lt;code&gt;corr()&lt;/code&gt;&lt;/a&gt; from the pandas package to  compute a pairwise correlation of columns. &lt;/p&gt;
&lt;p&gt;There'll always be a perfect positive correlation, a coefficient of 1, for each variable with itself. The 0.68 value below is the same as the one from our calculation with scipy above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_tips&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;total_bill&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;tip&lt;/th&gt;
      &lt;th&gt;total_bill&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;tip&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.675734&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;total_bill&lt;/th&gt;
      &lt;td&gt;0.675734&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Example 2: Diamonds Dataset - Carat and Price&lt;/h3&gt;
&lt;h4&gt;Get Diamonds Dataset&lt;/h4&gt;
&lt;p&gt;Import &lt;code&gt;diamonds&lt;/code&gt; dataset from Seaborn library and assign to DataFrame &lt;code&gt;df_diamonds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each row of &lt;code&gt;df_diamonds&lt;/code&gt; contains details about a specific diamond purchased. We'll just utilize the &lt;code&gt;price&lt;/code&gt; and &lt;code&gt;carat&lt;/code&gt; columns below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diamonds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview the first few rows of &lt;code&gt;df_diamonds&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;carat&lt;/th&gt;
      &lt;th&gt;cut&lt;/th&gt;
      &lt;th&gt;color&lt;/th&gt;
      &lt;th&gt;clarity&lt;/th&gt;
      &lt;th&gt;depth&lt;/th&gt;
      &lt;th&gt;table&lt;/th&gt;
      &lt;th&gt;price&lt;/th&gt;
      &lt;th&gt;x&lt;/th&gt;
      &lt;th&gt;y&lt;/th&gt;
      &lt;th&gt;z&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.23&lt;/td&gt;
      &lt;td&gt;Ideal&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;SI2&lt;/td&gt;
      &lt;td&gt;61.5&lt;/td&gt;
      &lt;td&gt;55.0&lt;/td&gt;
      &lt;td&gt;326&lt;/td&gt;
      &lt;td&gt;3.95&lt;/td&gt;
      &lt;td&gt;3.98&lt;/td&gt;
      &lt;td&gt;2.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.21&lt;/td&gt;
      &lt;td&gt;Premium&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;SI1&lt;/td&gt;
      &lt;td&gt;59.8&lt;/td&gt;
      &lt;td&gt;61.0&lt;/td&gt;
      &lt;td&gt;326&lt;/td&gt;
      &lt;td&gt;3.89&lt;/td&gt;
      &lt;td&gt;3.84&lt;/td&gt;
      &lt;td&gt;2.31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;0.23&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;VS1&lt;/td&gt;
      &lt;td&gt;56.9&lt;/td&gt;
      &lt;td&gt;65.0&lt;/td&gt;
      &lt;td&gt;327&lt;/td&gt;
      &lt;td&gt;4.05&lt;/td&gt;
      &lt;td&gt;4.07&lt;/td&gt;
      &lt;td&gt;2.31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;0.29&lt;/td&gt;
      &lt;td&gt;Premium&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;VS2&lt;/td&gt;
      &lt;td&gt;62.4&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
      &lt;td&gt;334&lt;/td&gt;
      &lt;td&gt;4.20&lt;/td&gt;
      &lt;td&gt;4.23&lt;/td&gt;
      &lt;td&gt;2.63&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;0.31&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;SI2&lt;/td&gt;
      &lt;td&gt;63.3&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
      &lt;td&gt;335&lt;/td&gt;
      &lt;td&gt;4.34&lt;/td&gt;
      &lt;td&gt;4.35&lt;/td&gt;
      &lt;td&gt;2.75&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4&gt;Explanation of carats&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;carat&lt;/code&gt; is a unit of measurement in diamonds to characterize its mass. Typically, bigger/heavier diamonds are known to be more expensive.&lt;/p&gt;
&lt;p&gt;Here's a helpful image from &lt;a href='https://www.womangettingmarried.com/guide-diamond-carats-prices/'&gt;womengettingmaried.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image of different carat sizes rings with labels" src="images/caratguide-500x500.jpg"&gt;&lt;/p&gt;
&lt;h4&gt;View Distribution of Carats versus Diamond Prices&lt;/h4&gt;
&lt;p&gt;The plot below has carats on the x-axis and price on the y-axis. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;carats&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Carats versus Price of Diamonds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="pearson_correlation_coefficient_files/pearson_correlation_coefficient_44_0.png"&gt;&lt;/p&gt;
&lt;p&gt;There seems to be a large positive correlation between the two variables. As carats increases, price increases too. This is expected since we assume larger/heavier diamonds are priced higher than smaller ones. &lt;/p&gt;
&lt;h4&gt;Evaluate the Pearson's Correlation Coefficient Between Tips and Bill Amounts&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;carat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_diamonds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.92
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Our returned value is 0.92 means there's a very strong (nearly perfect) correlation between the two variables.&lt;/p&gt;
&lt;h3&gt;Example 3: Titanic Dataset - Age and Fare Price&lt;/h3&gt;
&lt;h4&gt;Get Titanic Dataset&lt;/h4&gt;
&lt;p&gt;Import &lt;code&gt;titanic&lt;/code&gt; dataset from Seaborn library and assign to DataFrame &lt;code&gt;df_titanic&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each row of &lt;code&gt;df_titanic&lt;/code&gt; represents details of a passenger of the ship. We'll just utilize the &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;fare&lt;/code&gt; columns below. The &lt;code&gt;fare&lt;/code&gt; column represents the price a passenger paid to board the ship.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_titanic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;titanic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview the first few rows of &lt;code&gt;df_titanic&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_titanic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;survived&lt;/th&gt;
      &lt;th&gt;pclass&lt;/th&gt;
      &lt;th&gt;sex&lt;/th&gt;
      &lt;th&gt;age&lt;/th&gt;
      &lt;th&gt;sibsp&lt;/th&gt;
      &lt;th&gt;parch&lt;/th&gt;
      &lt;th&gt;fare&lt;/th&gt;
      &lt;th&gt;embarked&lt;/th&gt;
      &lt;th&gt;class&lt;/th&gt;
      &lt;th&gt;who&lt;/th&gt;
      &lt;th&gt;adult_male&lt;/th&gt;
      &lt;th&gt;deck&lt;/th&gt;
      &lt;th&gt;embark_town&lt;/th&gt;
      &lt;th&gt;alive&lt;/th&gt;
      &lt;th&gt;alone&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;male&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;7.2500&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;Third&lt;/td&gt;
      &lt;td&gt;man&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Southampton&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;female&lt;/td&gt;
      &lt;td&gt;38.0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;71.2833&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;First&lt;/td&gt;
      &lt;td&gt;woman&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Cherbourg&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;female&lt;/td&gt;
      &lt;td&gt;26.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;7.9250&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;Third&lt;/td&gt;
      &lt;td&gt;woman&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Southampton&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;female&lt;/td&gt;
      &lt;td&gt;35.0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;53.1000&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;First&lt;/td&gt;
      &lt;td&gt;woman&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Southampton&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;male&lt;/td&gt;
      &lt;td&gt;35.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8.0500&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;Third&lt;/td&gt;
      &lt;td&gt;man&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Southampton&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Let's create a new DataFrame assigned to the variable &lt;code&gt;df_titanic_non_nulls&lt;/code&gt; that filters out the rows in the &lt;code&gt;age&lt;/code&gt; column that were nulls.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_titanic_non_nulls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_titanic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_titanic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;View Distribution of Age vs. Fare Prices&lt;/h4&gt;
&lt;p&gt;The plot below has age in years on the x-axis and price in U.S. dollars on the y-axis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_titanic_non_nulls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fare&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;darkcyan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;age [years]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fare price [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labelpad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Titanic Passengers Age [Years] vs. Fare Price [$]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.015&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="pearson_correlation_coefficient_files/pearson_correlation_coefficient_59_0.png"&gt;&lt;/p&gt;
&lt;p&gt;There seems to be no clear correlation between the two variables. The visualization just illustrates just a bunch of random dots.&lt;/p&gt;
&lt;h4&gt;Evaluate the Pearson's Correlation Coefficient Between Age and Fare Price&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pearsonr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_titanic_non_nulls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_titanic_non_nulls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fare&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Our returned value is 0.1 means there's essentially no correlation between the two variables. A change in the value of one variable has no expected change in the value of the other variable.&lt;/p&gt;
&lt;h3&gt;Correlation Does Not Imply Causation&lt;/h3&gt;
&lt;p&gt;One of the most popular terms in the field of statistics is "correlation does not imply causation". A correlation means there's a linear relationship between two variables. A causation connects one process, the &lt;em&gt;cause&lt;/em&gt;, with another process or state, the &lt;em&gt;effect&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;However, this does not mean a change in one variable &lt;em&gt;causes&lt;/em&gt; a change in the value of the other variable. &lt;/p&gt;
&lt;p&gt;For example, there are studies that have likely proved that increased exercise correlates with a decrease in a person's mass. This is considered to be a strong &lt;em&gt;negative&lt;/em&gt; correlation between the two variables. This relationship has also likely been proven to be cause-and-effect in which once the activity of exercising takes place, this &lt;em&gt;causes&lt;/em&gt; the decrease in a person's mass. &lt;/p&gt;
&lt;p&gt;On the other hand, here's a different example mentioned in this &lt;a href='https://en.wikipedia.org/wiki/Correlation_does_not_imply_causation'&gt;Wikipedia article&lt;/a&gt;: as ice cream sales increase, the rate of drowning deaths increases sharply. These two variables can be correlated. So as ice cream sales have increased over time, so have drowning deaths so there's a positive linear relationship between the two variables. Yet, it's incredibly unlikely there there's &lt;em&gt;any causuality relationship&lt;/em&gt; between those two variables since they're so distinct from one another. Rather, people eat more ice cream in warm-weather months and also likely swim more in these months. If more people are swimming, there's likely a greater chance of drowning deaths. The fact is: ice cream consumption &lt;em&gt;does not cause&lt;/em&gt; drowning. There's lots of other factors to consider in this relationship such as weather.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "1em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="correlation"></category><category term="scatter plot"></category><category term="python"></category><category term="pandas"></category></entry></feed>